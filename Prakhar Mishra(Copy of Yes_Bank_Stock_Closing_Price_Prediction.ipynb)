{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1v1adWJbi6eRgtPnJCN9wM4_zhmL1J0Hr","timestamp":1690006459731},{"file_id":"10B2s5af8INkHgIz_7XBjW3iNDbGY7ltx","timestamp":1689767841266}],"collapsed_sections":["vncDsAP0Gaoa","FJNUwmbgGyua","w6K7xa23Elo4","yQaldy8SH6Dl","Y3lxredqlCYt","3RnN4peoiCZX","x71ZqKXriCWQ","7hBIi_osiCS2","35m5QtbWiB9F","PoPl-ycgm1ru","H0kj-8xxnORC","PBTbrJXOngz2","u3PMJOP6ngxN","bKJF3rekwFvQ","MSa1f5Uengrz","0wOQAZs5pc--","K5QZ13OEpz2H","lQ7QKXXCp7Bj","448CDAPjqfQr","KSlN3yHqYklG","t6dVpIINYklI","ijmpgYnKYklI","-JiQyfWJYklI","EM7whBJCYoAo","fge-S5ZAYoAp","85gYPyotYoAp","RoGjAbkUYoAp","4Of9eVA-YrdM","iky9q4vBYrdO","F6T5p64dYrdO","y-Ehk30pYrdP","bamQiAODYuh1","QHF8YVU7Yuh3","GwzvFGzlYuh3","qYpmQ266Yuh3","OH-pJp9IphqM","bbFf2-_FphqN","_ouA3fa0phqN","Seke61FWphqN","PIIx-8_IphqN","t27r6nlMphqO","r2jJGEOYphqO","b0JNsNcRphqO","BZR9WyysphqO","jj7wYXLtphqO","eZrbJ2SmphqO","rFu4xreNphqO","YJ55k-q6phqO","gCFgpxoyphqP","OVtJsKN_phqQ","lssrdh5qphqQ","U2RJ9gkRphqQ","1M8mcRywphqQ","tgIPom80phqQ","JMzcOPDDphqR","x-EpHcCOp1ci","X_VqEhTip1ck","8zGJKyg5p1ck","PVzmfK_Ep1ck","n3dbpmDWp1ck","ylSl6qgtp1ck","ZWILFDl5p1ck","M7G43BXep1ck","Ag9LCva-p1cl","E6MkPsBcp1cl","2cELzS2fp1cl","3MPXvC8up1cl","NC_X3p0fY2L0","UV0SzAkaZNRQ","YPEH6qLeZNRQ","q29F0dvdveiT","EXh0U9oCveiU","22aHeOlLveiV","g-ATYxFrGrvw","Yfr_Vlr8HBkt","8yEUt7NnHlrM","tEA2Xm5dHt1r","I79__PHVH19G","Ou-I18pAyIpj","fF3858GYyt-u","4_0_7-oCpUZd","hwyV_J3ipUZe","3yB-zSqbpUZe","dEUvejAfpUZe","Fd15vwWVpUZf","bn_IUdTipZyH","49K5P_iCpZyH","Nff-vKELpZyI","kLW572S8pZyI","dWbDXHzopZyI","xiyOF9F70UgQ","7wuGOrhz0itI","id1riN9m0vUs","578E2V7j08f6","89xtkJwZ18nB","67NQN5KX2AMe","Iwf50b-R2tYG","GMQiZwjn3iu7","WVIkgGqN3qsr","XkPnILGE3zoT","Hlsf0x5436Go","mT9DMSJo4nBL","c49ITxTc407N","OeJFEK0N496M","9ExmJH0g5HBk","cJNqERVU536h","k5UmGsbsOxih","T0VqWOYE6DLQ","qBMux9mC6MCf","-oLEiFgy-5Pf","C74aWNz2AliB","2DejudWSA-a0","pEMng2IbBLp7","rAdphbQ9Bhjc","TNVZ9zx19K6k","nqoHp30x9hH9","rMDnDkt2B6du","yiiVWRdJDDil","1UUpS68QDMuG","kexQrXU-DjzY","T5CmagL3EC8N","BhH2vgX9EjGr","qjKvONjwE8ra","P1XJ9OREExlT","VFOzZv6IFROw","TIqpNgepFxVj","OB4l2ZhMeS1U","ArJBuiUVfxKd","4qY1EAkEfxKe","PiV4Ypx8fxKe","TfvqoZmBfxKf","dJ2tPlVmpsJ0","JWYfwnehpsJ1","-jK_YjpMpsJ2","HAih1iBOpsJ2","zVGeBEFhpsJ2","bmKjuQ-FpsJ3","Fze-IPXLpx6K","7AN1z2sKpx6M","9PIHJqyupx6M","_-qAgymDpx6N","Z-hykwinpx6N","h_CCil-SKHpo","cBFFvTBNJzUa","HvGl1hHyA_VK","KH5McJBi2d8v","-Kee-DAl2viO","gCX9965dhzqZ","gIfDvo9L0UH2"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Project Name**    -\n","\n"],"metadata":{"id":"vncDsAP0Gaoa"}},{"cell_type":"markdown","source":["##### **Project Type**    - EDA/Regression/Classification/Unsupervised\n","Regression ML project\n"],"metadata":{"id":"beRrZCGUAJYm"}},{"cell_type":"markdown","source":["# **Project Summary -**"],"metadata":{"id":"FJNUwmbgGyua"}},{"cell_type":"markdown","source":["Write the summary here within 500-600 words."],"metadata":{"id":"F6v_1wHtG2nS"}},{"cell_type":"markdown","source":["# **GitHub Link -**"],"metadata":{"id":"w6K7xa23Elo4"}},{"cell_type":"markdown","source":["Provide your GitHub Link here."],"metadata":{"id":"h1o69JH3Eqqn"}},{"cell_type":"markdown","source":["# **Problem Statement**\n"],"metadata":{"id":"yQaldy8SH6Dl"}},{"cell_type":"markdown","source":["**Write Problem Statement Here.**"],"metadata":{"id":"DpeJGUA3kjGy"}},{"cell_type":"markdown","source":["# **General Guidelines** : -  "],"metadata":{"id":"mDgbUHAGgjLW"}},{"cell_type":"markdown","source":["1.   Well-structured, formatted, and commented code is required.\n","2.   Exception Handling, Production Grade Code & Deployment Ready Code will be a plus. Those students will be awarded some additional credits.\n","     \n","     The additional credits will have advantages over other students during Star Student selection.\n","       \n","             [ Note: - Deployment Ready Code is defined as, the whole .ipynb notebook should be executable in one go\n","                       without a single error logged. ]\n","\n","3.   Each and every logic should have proper comments.\n","4. You may add as many number of charts you want. Make Sure for each and every chart the following format should be answered.\n","        \n","\n","```\n","# Chart visualization code\n","```\n","            \n","\n","*   Why did you pick the specific chart?\n","*   What is/are the insight(s) found from the chart?\n","* Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason.\n","\n","5. You have to create at least 15 logical & meaningful charts having important insights.\n","\n","\n","[ Hints : - Do the Vizualization in  a structured way while following \"UBM\" Rule.\n","\n","U - Univariate Analysis,\n","\n","B - Bivariate Analysis (Numerical - Categorical, Numerical - Numerical, Categorical - Categorical)\n","\n","M - Multivariate Analysis\n"," ]\n","\n","\n","\n","\n","\n","6. You may add more ml algorithms for model creation. Make sure for each and every algorithm, the following format should be answered.\n","\n","\n","*   Explain the ML Model used and it's performance using Evaluation metric Score Chart.\n","\n","\n","*   Cross- Validation & Hyperparameter Tuning\n","\n","*   Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart.\n","\n","*   Explain each evaluation metric's indication towards business and the business impact pf the ML model used.\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"ZrxVaUj-hHfC"}},{"cell_type":"markdown","source":["# ***Let's Begin !***"],"metadata":{"id":"O_i_v8NEhb9l"}},{"cell_type":"markdown","source":["## ***1. Know Your Data***"],"metadata":{"id":"HhfV-JJviCcP"}},{"cell_type":"markdown","source":["### Import Libraries"],"metadata":{"id":"Y3lxredqlCYt"}},{"cell_type":"code","source":["# Import Libraries\n","\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import scipy\n","import statsmodels.api as sm\n","from sklearn import datasets, linear_model, metrics\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder"],"metadata":{"id":"M8Vqi-pPk-HR","executionInfo":{"status":"ok","timestamp":1692341854878,"user_tz":-330,"elapsed":3016,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-VSuPKI2RScB","executionInfo":{"status":"ok","timestamp":1692341895874,"user_tz":-330,"elapsed":41006,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"a0262e5e-1828-4fd2-b355-5c964bf5f1c5"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["### Dataset Loading"],"metadata":{"id":"3RnN4peoiCZX"}},{"cell_type":"code","source":["# Load Dataset\n","yesbank = pd.read_csv(\"/content/drive/MyDrive/data_YesBank_StockPrices.csv\")"],"metadata":{"id":"4CkvbW_SlZ_R","executionInfo":{"status":"ok","timestamp":1692341895875,"user_tz":-330,"elapsed":34,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["### Dataset First View"],"metadata":{"id":"x71ZqKXriCWQ"}},{"cell_type":"code","source":["# Dataset First Look\n","yesbank"],"metadata":{"id":"LWNFOSvLl09H","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1692341895875,"user_tz":-330,"elapsed":33,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"bbb7e14b-23e7-4ece-d049-8c83bcbe173b"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Date   Open   High    Low  Close\n","0    Jul-05  13.00  14.00  11.25  12.46\n","1    Aug-05  12.58  14.88  12.55  13.42\n","2    Sep-05  13.48  14.87  12.27  13.30\n","3    Oct-05  13.20  14.47  12.40  12.99\n","4    Nov-05  13.35  13.88  12.88  13.41\n","..      ...    ...    ...    ...    ...\n","180  Jul-20  25.60  28.30  11.10  11.95\n","181  Aug-20  12.00  17.16  11.85  14.37\n","182  Sep-20  14.30  15.34  12.75  13.15\n","183  Oct-20  13.30  14.01  12.11  12.42\n","184  Nov-20  12.41  14.90  12.21  14.67\n","\n","[185 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-967550a2-f24d-4cde-b11a-12a6f5f01975\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Jul-05</td>\n","      <td>13.00</td>\n","      <td>14.00</td>\n","      <td>11.25</td>\n","      <td>12.46</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Aug-05</td>\n","      <td>12.58</td>\n","      <td>14.88</td>\n","      <td>12.55</td>\n","      <td>13.42</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Sep-05</td>\n","      <td>13.48</td>\n","      <td>14.87</td>\n","      <td>12.27</td>\n","      <td>13.30</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Oct-05</td>\n","      <td>13.20</td>\n","      <td>14.47</td>\n","      <td>12.40</td>\n","      <td>12.99</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Nov-05</td>\n","      <td>13.35</td>\n","      <td>13.88</td>\n","      <td>12.88</td>\n","      <td>13.41</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>180</th>\n","      <td>Jul-20</td>\n","      <td>25.60</td>\n","      <td>28.30</td>\n","      <td>11.10</td>\n","      <td>11.95</td>\n","    </tr>\n","    <tr>\n","      <th>181</th>\n","      <td>Aug-20</td>\n","      <td>12.00</td>\n","      <td>17.16</td>\n","      <td>11.85</td>\n","      <td>14.37</td>\n","    </tr>\n","    <tr>\n","      <th>182</th>\n","      <td>Sep-20</td>\n","      <td>14.30</td>\n","      <td>15.34</td>\n","      <td>12.75</td>\n","      <td>13.15</td>\n","    </tr>\n","    <tr>\n","      <th>183</th>\n","      <td>Oct-20</td>\n","      <td>13.30</td>\n","      <td>14.01</td>\n","      <td>12.11</td>\n","      <td>12.42</td>\n","    </tr>\n","    <tr>\n","      <th>184</th>\n","      <td>Nov-20</td>\n","      <td>12.41</td>\n","      <td>14.90</td>\n","      <td>12.21</td>\n","      <td>14.67</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>185 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-967550a2-f24d-4cde-b11a-12a6f5f01975')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-967550a2-f24d-4cde-b11a-12a6f5f01975 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-967550a2-f24d-4cde-b11a-12a6f5f01975');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5de056fb-22e2-4ff6-a478-3fa36629b8db\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5de056fb-22e2-4ff6-a478-3fa36629b8db')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5de056fb-22e2-4ff6-a478-3fa36629b8db button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["from datetime import datetime\n","from dateutil.relativedelta import relativedelta"],"metadata":{"id":"_vbmgYwbM7OB","executionInfo":{"status":"ok","timestamp":1692341895876,"user_tz":-330,"elapsed":32,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["yesbank['Date'] = yesbank['Date'].apply(lambda x: datetime.strptime(x, \"%b-%y\"))"],"metadata":{"id":"oDKFLrgNM1EO","executionInfo":{"status":"ok","timestamp":1692341895877,"user_tz":-330,"elapsed":33,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(8, 6))\n","plt.bar(yesbank['Date'], yesbank['Close'])\n","plt.title('Bar Chart of Closing Price')\n","plt.xlabel('Date')\n","plt.ylabel('Closing Price')\n","plt.xticks(rotation=45)\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":585},"id":"JvW8I6hmNWq_","executionInfo":{"status":"ok","timestamp":1692341897046,"user_tz":-330,"elapsed":1201,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"ebc4741b-51f8-417d-a738-cea6598f05b9"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Dataset Rows & Columns count"],"metadata":{"id":"7hBIi_osiCS2"}},{"cell_type":"code","source":["# Dataset Rows & Columns count\n","\n","# To get the number of rows:\n","num_rows = yesbank.shape[0]\n","\n","# To get the number of columns:\n","num_columns = yesbank.shape[1]\n","\n","print(\"Number of rows:\", num_rows)\n","print(\"Number of columns:\", num_columns)"],"metadata":{"id":"Kllu7SJgmLij","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692341897049,"user_tz":-330,"elapsed":78,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"77794d16-0879-45f8-d87f-21c9dd3a3a7a"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of rows: 185\n","Number of columns: 5\n"]}]},{"cell_type":"markdown","source":["### Dataset Information"],"metadata":{"id":"JlHwYmJAmNHm"}},{"cell_type":"code","source":["# Dataset Info\n","\n","yesbank.info()"],"metadata":{"id":"e9hRXRi6meOf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692341897050,"user_tz":-330,"elapsed":66,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"768f539f-4330-4324-9878-683df96eb6d7"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 185 entries, 0 to 184\n","Data columns (total 5 columns):\n"," #   Column  Non-Null Count  Dtype         \n","---  ------  --------------  -----         \n"," 0   Date    185 non-null    datetime64[ns]\n"," 1   Open    185 non-null    float64       \n"," 2   High    185 non-null    float64       \n"," 3   Low     185 non-null    float64       \n"," 4   Close   185 non-null    float64       \n","dtypes: datetime64[ns](1), float64(4)\n","memory usage: 7.4 KB\n"]}]},{"cell_type":"markdown","source":["#### Duplicate Values"],"metadata":{"id":"35m5QtbWiB9F"}},{"cell_type":"code","source":["# Dataset Duplicate Value Count\n","\n","# To count the number of duplicate values in the DataFrame:\n","num_duplicates = yesbank.duplicated().sum()\n","\n","print(\"Number of duplicate rows in the dataset:\", num_duplicates)"],"metadata":{"id":"1sLdpKYkmox0","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692341897052,"user_tz":-330,"elapsed":62,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"d2bc2d80-87d8-4dd3-8a7b-9af283d1f2e2"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of duplicate rows in the dataset: 0\n"]}]},{"cell_type":"markdown","source":["#### Missing Values/Null Values"],"metadata":{"id":"PoPl-ycgm1ru"}},{"cell_type":"code","source":["# Missing Values/Null Values Count\n","\n","missing_values_count = yesbank.isnull().sum()\n","\n","print(\"Missing values count in each column:\")\n","print(missing_values_count)\n"],"metadata":{"id":"GgHWkxvamxVg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692341897054,"user_tz":-330,"elapsed":58,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"9cf1189d-4e6e-4957-8c04-c8bd38415f64"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Missing values count in each column:\n","Date     0\n","Open     0\n","High     0\n","Low      0\n","Close    0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["# Visualizing the missing values\n","\n","# Create a heatmap to visualize missing values\n","plt.figure(figsize=(10, 6))\n","sns.heatmap(yesbank.isnull(), cbar=False, cmap='viridis')\n","plt.title(\"Missing Values Heatmap\")\n","plt.xlabel(\"Columns\")\n","plt.ylabel(\"Rows\")\n","plt.show()"],"metadata":{"id":"3q5wnI3om9sJ","colab":{"base_uri":"https://localhost:8080/","height":564},"executionInfo":{"status":"ok","timestamp":1692341898101,"user_tz":-330,"elapsed":1098,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"b38e53d5-2d67-4e4c-fd3b-9ce3006fbf2b"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### What did you know about your dataset?"],"metadata":{"id":"H0kj-8xxnORC"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"gfoNAAC-nUe_"}},{"cell_type":"code","source":["'''1- Stock Price Trends: You can analyze the historical closing prices to\n","      understand the overall trends in Yes Bank's stock price over time. This\n","      can help identify periods of upward or downward trends and potential long-\n","      term patterns.\n","\n","   2- Seasonal Patterns: By visualizing the data, you might discover seasonal\n","      patterns in the stock price, such as regular fluctuations or trends that\n","      repeat at specific intervals.\n","\n","   3- Volatility and Price Range: Analyzing the difference between the high and\n","      low prices can provide insights into the stock's volatility. Understanding\n","      the price range can help you gauge potential risks and opportunities.\n","\n","   4- Correlation with Other Variables: If the dataset contains additional\n","      features like volume or other financial indicators, you can analyze their\n","      correlation with the closing price to understand how they may influence\n","      the stock's performance.\n","\n","   5- Outliers and Anomalies: Identifying outliers or unusual data points can\n","      give you clues about significant events or market anomalies that affected\n","      the stock price.\n","\n","   6- Prediction and Forecasting: You can use the historical data to build\n","      predictive models for forecasting future stock prices. These models can\n","      help you estimate potential future trends and support investment decisions.'''\n"],"metadata":{"id":"F3_MqGx8lP3B","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341898101,"user_tz":-330,"elapsed":92,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"a64002b0-f32a-4af4-df65-9309ccdcd974"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"1- Stock Price Trends: You can analyze the historical closing prices to\\n      understand the overall trends in Yes Bank's stock price over time. This\\n      can help identify periods of upward or downward trends and potential long-\\n      term patterns.\\n\\n   2- Seasonal Patterns: By visualizing the data, you might discover seasonal\\n      patterns in the stock price, such as regular fluctuations or trends that\\n      repeat at specific intervals.\\n\\n   3- Volatility and Price Range: Analyzing the difference between the high and\\n      low prices can provide insights into the stock's volatility. Understanding\\n      the price range can help you gauge potential risks and opportunities.\\n\\n   4- Correlation with Other Variables: If the dataset contains additional\\n      features like volume or other financial indicators, you can analyze their\\n      correlation with the closing price to understand how they may influence\\n      the stock's performance.\\n\\n   5- Outliers and Anomalies: Identifying outliers or unusual data points can\\n      give you clues about significant events or market anomalies that affected\\n      the stock price.\\n\\n   6- Prediction and Forecasting: You can use the historical data to build\\n      predictive models for forecasting future stock prices. These models can\\n      help you estimate potential future trends and support investment decisions.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["## ***2. Understanding Your Variables***"],"metadata":{"id":"nA9Y7ga8ng1Z"}},{"cell_type":"code","source":["# Dataset Columns\n","\n","# To view the list of columns in the DataFrame:\n","columns_list = yesbank.columns.tolist()\n","\n","print(\"List of columns in the dataset:\")\n","print(columns_list)"],"metadata":{"id":"j7xfkqrt5Ag5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692341898102,"user_tz":-330,"elapsed":88,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"a877b464-59c6-48b7-abad-db71550f4636"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["List of columns in the dataset:\n","['Date', 'Open', 'High', 'Low', 'Close']\n"]}]},{"cell_type":"code","source":["# Dataset Describe\n","\n","# To get the descriptive statistics of the DataFrame:\n","description = yesbank.describe()\n","\n","print(description)\n"],"metadata":{"id":"DnOaZdaE5Q5t","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692341898102,"user_tz":-330,"elapsed":76,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"0e33c7be-75e0-478f-ce8f-c704fb7647c0"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["             Open        High         Low       Close\n","count  185.000000  185.000000  185.000000  185.000000\n","mean   105.541405  116.104324   94.947838  105.204703\n","std     98.879850  106.333497   91.219415   98.583153\n","min     10.000000   11.240000    5.550000    9.980000\n","25%     33.800000   36.140000   28.510000   33.450000\n","50%     62.980000   72.550000   58.000000   62.540000\n","75%    153.000000  169.190000  138.350000  153.300000\n","max    369.950000  404.000000  345.500000  367.900000\n"]}]},{"cell_type":"markdown","source":["### Variables Description"],"metadata":{"id":"PBTbrJXOngz2"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"aJV4KIxSnxay"}},{"cell_type":"code","source":["'''\n","1- Date:This variable represents the date on which the stock data was recorded.\n","   Understanding this variable will help you perform time-based analysis and\n","   visualize how the stock price changes over different periods.\n","\n","2- Open: The \"Open\" column represents the opening price of Yes Bank stock on\n","   each trading day. This data can help you understand how the stock performs at\n","   the start of the trading session.\n","\n","3- High: The \"High\" column represents the highest price of Yes Bank stock\n","   reached during a trading day. This data can indicate the maximum price level\n","   the stock achieved on each day.\n","\n","4- Low: The \"Low\" column represents the lowest price of Yes Bank stock reached\n","   during a trading day. This data can indicate the minimum price level the\n","   stock reached on each day.\n","\n","5- Close: The \"Close\" column represents the closing price of Yes Bank stock on\n","   each trading day. This data can help you analyze the stock's performance at\n","   the end of each trading session.'''"],"metadata":{"id":"5GZboTFmmXz3","colab":{"base_uri":"https://localhost:8080/","height":123},"executionInfo":{"status":"ok","timestamp":1692341898103,"user_tz":-330,"elapsed":71,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"61fa7b26-b102-4436-9c65-a10057c93218"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n1- Date:This variable represents the date on which the stock data was recorded.\\n   Understanding this variable will help you perform time-based analysis and\\n   visualize how the stock price changes over different periods.\\n\\n2- Open: The \"Open\" column represents the opening price of Yes Bank stock on\\n   each trading day. This data can help you understand how the stock performs at\\n   the start of the trading session.\\n\\n3- High: The \"High\" column represents the highest price of Yes Bank stock\\n   reached during a trading day. This data can indicate the maximum price level\\n   the stock achieved on each day.\\n\\n4- Low: The \"Low\" column represents the lowest price of Yes Bank stock reached\\n   during a trading day. This data can indicate the minimum price level the\\n   stock reached on each day.\\n\\n5- Close: The \"Close\" column represents the closing price of Yes Bank stock on\\n   each trading day. This data can help you analyze the stock\\'s performance at\\n   the end of each trading session.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["### Check Unique Values for each variable."],"metadata":{"id":"u3PMJOP6ngxN"}},{"cell_type":"code","source":["# Check Unique Values for each variable.\n","\n","# To check unique values for each variable (column):\n","for column in yesbank.columns:\n","    unique_values = yesbank[column].unique()\n","    print(f\"Unique values for column '{column}':\")\n","    print(unique_values)\n","    print(\"\\n\")"],"metadata":{"id":"zms12Yq5n-jE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692341898103,"user_tz":-330,"elapsed":68,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"779e8649-87e6-4731-ce6f-98f3c139c4d6"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Unique values for column 'Date':\n","['2005-07-01T00:00:00.000000000' '2005-08-01T00:00:00.000000000'\n"," '2005-09-01T00:00:00.000000000' '2005-10-01T00:00:00.000000000'\n"," '2005-11-01T00:00:00.000000000' '2005-12-01T00:00:00.000000000'\n"," '2006-01-01T00:00:00.000000000' '2006-02-01T00:00:00.000000000'\n"," '2006-03-01T00:00:00.000000000' '2006-04-01T00:00:00.000000000'\n"," '2006-05-01T00:00:00.000000000' '2006-06-01T00:00:00.000000000'\n"," '2006-07-01T00:00:00.000000000' '2006-08-01T00:00:00.000000000'\n"," '2006-09-01T00:00:00.000000000' '2006-10-01T00:00:00.000000000'\n"," '2006-11-01T00:00:00.000000000' '2006-12-01T00:00:00.000000000'\n"," '2007-01-01T00:00:00.000000000' '2007-02-01T00:00:00.000000000'\n"," '2007-03-01T00:00:00.000000000' '2007-04-01T00:00:00.000000000'\n"," '2007-05-01T00:00:00.000000000' '2007-06-01T00:00:00.000000000'\n"," '2007-07-01T00:00:00.000000000' '2007-08-01T00:00:00.000000000'\n"," '2007-09-01T00:00:00.000000000' '2007-10-01T00:00:00.000000000'\n"," '2007-11-01T00:00:00.000000000' '2007-12-01T00:00:00.000000000'\n"," '2008-01-01T00:00:00.000000000' '2008-02-01T00:00:00.000000000'\n"," '2008-03-01T00:00:00.000000000' '2008-04-01T00:00:00.000000000'\n"," '2008-05-01T00:00:00.000000000' '2008-06-01T00:00:00.000000000'\n"," '2008-07-01T00:00:00.000000000' '2008-08-01T00:00:00.000000000'\n"," '2008-09-01T00:00:00.000000000' '2008-10-01T00:00:00.000000000'\n"," '2008-11-01T00:00:00.000000000' '2008-12-01T00:00:00.000000000'\n"," '2009-01-01T00:00:00.000000000' '2009-02-01T00:00:00.000000000'\n"," '2009-03-01T00:00:00.000000000' '2009-04-01T00:00:00.000000000'\n"," '2009-05-01T00:00:00.000000000' '2009-06-01T00:00:00.000000000'\n"," '2009-07-01T00:00:00.000000000' '2009-08-01T00:00:00.000000000'\n"," '2009-09-01T00:00:00.000000000' '2009-10-01T00:00:00.000000000'\n"," '2009-11-01T00:00:00.000000000' '2009-12-01T00:00:00.000000000'\n"," '2010-01-01T00:00:00.000000000' '2010-02-01T00:00:00.000000000'\n"," '2010-03-01T00:00:00.000000000' '2010-04-01T00:00:00.000000000'\n"," '2010-05-01T00:00:00.000000000' '2010-06-01T00:00:00.000000000'\n"," '2010-07-01T00:00:00.000000000' '2010-08-01T00:00:00.000000000'\n"," '2010-09-01T00:00:00.000000000' '2010-10-01T00:00:00.000000000'\n"," '2010-11-01T00:00:00.000000000' '2010-12-01T00:00:00.000000000'\n"," '2011-01-01T00:00:00.000000000' '2011-02-01T00:00:00.000000000'\n"," '2011-03-01T00:00:00.000000000' '2011-04-01T00:00:00.000000000'\n"," '2011-05-01T00:00:00.000000000' '2011-06-01T00:00:00.000000000'\n"," '2011-07-01T00:00:00.000000000' '2011-08-01T00:00:00.000000000'\n"," '2011-09-01T00:00:00.000000000' '2011-10-01T00:00:00.000000000'\n"," '2011-11-01T00:00:00.000000000' '2011-12-01T00:00:00.000000000'\n"," '2012-01-01T00:00:00.000000000' '2012-02-01T00:00:00.000000000'\n"," '2012-03-01T00:00:00.000000000' '2012-04-01T00:00:00.000000000'\n"," '2012-05-01T00:00:00.000000000' '2012-06-01T00:00:00.000000000'\n"," '2012-07-01T00:00:00.000000000' '2012-08-01T00:00:00.000000000'\n"," '2012-09-01T00:00:00.000000000' '2012-10-01T00:00:00.000000000'\n"," '2012-11-01T00:00:00.000000000' '2012-12-01T00:00:00.000000000'\n"," '2013-01-01T00:00:00.000000000' '2013-02-01T00:00:00.000000000'\n"," '2013-03-01T00:00:00.000000000' '2013-04-01T00:00:00.000000000'\n"," '2013-05-01T00:00:00.000000000' '2013-06-01T00:00:00.000000000'\n"," '2013-07-01T00:00:00.000000000' '2013-08-01T00:00:00.000000000'\n"," '2013-09-01T00:00:00.000000000' '2013-10-01T00:00:00.000000000'\n"," '2013-11-01T00:00:00.000000000' '2013-12-01T00:00:00.000000000'\n"," '2014-01-01T00:00:00.000000000' '2014-02-01T00:00:00.000000000'\n"," '2014-03-01T00:00:00.000000000' '2014-04-01T00:00:00.000000000'\n"," '2014-05-01T00:00:00.000000000' '2014-06-01T00:00:00.000000000'\n"," '2014-07-01T00:00:00.000000000' '2014-08-01T00:00:00.000000000'\n"," '2014-09-01T00:00:00.000000000' '2014-10-01T00:00:00.000000000'\n"," '2014-11-01T00:00:00.000000000' '2014-12-01T00:00:00.000000000'\n"," '2015-01-01T00:00:00.000000000' '2015-02-01T00:00:00.000000000'\n"," '2015-03-01T00:00:00.000000000' '2015-04-01T00:00:00.000000000'\n"," '2015-05-01T00:00:00.000000000' '2015-06-01T00:00:00.000000000'\n"," '2015-07-01T00:00:00.000000000' '2015-08-01T00:00:00.000000000'\n"," '2015-09-01T00:00:00.000000000' '2015-10-01T00:00:00.000000000'\n"," '2015-11-01T00:00:00.000000000' '2015-12-01T00:00:00.000000000'\n"," '2016-01-01T00:00:00.000000000' '2016-02-01T00:00:00.000000000'\n"," '2016-03-01T00:00:00.000000000' '2016-04-01T00:00:00.000000000'\n"," '2016-05-01T00:00:00.000000000' '2016-06-01T00:00:00.000000000'\n"," '2016-07-01T00:00:00.000000000' '2016-08-01T00:00:00.000000000'\n"," '2016-09-01T00:00:00.000000000' '2016-10-01T00:00:00.000000000'\n"," '2016-11-01T00:00:00.000000000' '2016-12-01T00:00:00.000000000'\n"," '2017-01-01T00:00:00.000000000' '2017-02-01T00:00:00.000000000'\n"," '2017-03-01T00:00:00.000000000' '2017-04-01T00:00:00.000000000'\n"," '2017-05-01T00:00:00.000000000' '2017-06-01T00:00:00.000000000'\n"," '2017-07-01T00:00:00.000000000' '2017-08-01T00:00:00.000000000'\n"," '2017-09-01T00:00:00.000000000' '2017-10-01T00:00:00.000000000'\n"," '2017-11-01T00:00:00.000000000' '2017-12-01T00:00:00.000000000'\n"," '2018-01-01T00:00:00.000000000' '2018-02-01T00:00:00.000000000'\n"," '2018-03-01T00:00:00.000000000' '2018-04-01T00:00:00.000000000'\n"," '2018-05-01T00:00:00.000000000' '2018-06-01T00:00:00.000000000'\n"," '2018-07-01T00:00:00.000000000' '2018-08-01T00:00:00.000000000'\n"," '2018-09-01T00:00:00.000000000' '2018-10-01T00:00:00.000000000'\n"," '2018-11-01T00:00:00.000000000' '2018-12-01T00:00:00.000000000'\n"," '2019-01-01T00:00:00.000000000' '2019-02-01T00:00:00.000000000'\n"," '2019-03-01T00:00:00.000000000' '2019-04-01T00:00:00.000000000'\n"," '2019-05-01T00:00:00.000000000' '2019-06-01T00:00:00.000000000'\n"," '2019-07-01T00:00:00.000000000' '2019-08-01T00:00:00.000000000'\n"," '2019-09-01T00:00:00.000000000' '2019-10-01T00:00:00.000000000'\n"," '2019-11-01T00:00:00.000000000' '2019-12-01T00:00:00.000000000'\n"," '2020-01-01T00:00:00.000000000' '2020-02-01T00:00:00.000000000'\n"," '2020-03-01T00:00:00.000000000' '2020-04-01T00:00:00.000000000'\n"," '2020-05-01T00:00:00.000000000' '2020-06-01T00:00:00.000000000'\n"," '2020-07-01T00:00:00.000000000' '2020-08-01T00:00:00.000000000'\n"," '2020-09-01T00:00:00.000000000' '2020-10-01T00:00:00.000000000'\n"," '2020-11-01T00:00:00.000000000']\n","\n","\n","Unique values for column 'Open':\n","[ 13.    12.58  13.48  13.2   13.35  13.49  13.68  15.5   16.2   20.56\n","  19.8   18.2   16.    15.9   18.    18.78  22.8   25.4   27.4   30.2\n","  29.3   27.    30.66  33.89  35.98  37.5   37.4   41.8   44.4   46.4\n","  49.99  50.88  48.9   33.9   34.3   31.22  22.85  25.    26.68  24.6\n","  14.79  12.4   15.28  12.19  10.    10.04  15.94  25.6   29.7   31.98\n","  33.8   41.2   46.58  50.98  53.6   49.    47.8   50.67  56.94  56.7\n","  53.55  59.4   62.8   70.9   72.2   61.8   62.98  53.    51.84  62.\n","  61.26  60.4   63.    62.9   56.    53.8   62.2   57.    47.92  65.9\n","  69.    73.62  70.4   65.45  68.15  73.    66.2   76.4   82.54  89.2\n","  93.2  104.41  94.    85.7  100.99  99.    92.4   66.    49.2   58.\n","  74.    74.4   74.74  61.54  60.52  83.45  88.8  114.8  108.43 107.4\n"," 114.6  112.1  137.1  142.08 154.4  172.5  174.8  162.8  170.   177.\n"," 169.   165.9  135.61 146.96 151.73 153.   145.   150.4  138.8  172.02\n"," 189.8  206.4  221.96 244.   273.3  253.41 255.   235.4  231.98 280.4\n"," 290.6  309.6  326.   286.66 293.04 363.   351.   354.6  315.5  307.2\n"," 314.   355.   320.7  305.   362.85 348.   340.   369.95 347.2  180.\n"," 192.   174.   182.85 197.   234.6  277.   163.3  147.95 109.6   59.5\n","  42.    71.    70.    46.9   39.1   35.2   22.3   27.8   27.75  12.\n","  14.3   13.3   12.41]\n","\n","\n","Unique values for column 'High':\n","[ 14.    14.88  14.87  14.47  13.88  14.44  17.16  16.97  20.95  20.8\n","  21.8   18.4   17.2   18.6   18.88  24.2   28.47  29.66  34.16  32.6\n","  31.58  31.99  36.14  36.38  41.04  39.    41.75  47.3   50.98  54.\n","  55.56  53.97  48.9   35.8   36.88  32.22  30.5   28.98  29.8   25.\n","  17.8   16.56  18.34  12.5   11.24  17.51  28.84  31.08  33.16  35.18\n","  41.3   52.34  54.98  55.67  57.58  51.48  52.06  59.48  58.08  59.9\n","  60.94  68.88  71.74  76.    77.6   68.36  63.54  57.69  65.2   68.26\n","  61.68  63.39  68.    63.96  60.08  64.8   63.7   59.8   66.5   74.8\n","  77.88  76.1   70.59  70.6   73.19  74.78  77.69  84.2   89.6   95.\n"," 107.   107.8  100.15 101.8  109.43 102.94 100.4   67.81  78.94  76.44\n","  77.27  83.    76.35  62.7   83.36  94.98 117.6  117.57 114.46 118.69\n"," 126.85 137.8  143.91 155.   179.   173.88 182.   172.8  176.96 179.4\n"," 175.58 169.19 155.5  155.94 157.96 154.52 149.9  157.85 175.12 190.44\n"," 209.   223.   247.18 275.   290.   265.5  262.72 245.   284.31 294.19\n"," 311.57 330.58 330.3  306.34 372.   368.52 383.25 375.75 329.8  319.\n"," 366.   366.5  325.8  368.75 364.4  350.1  393.35 404.   350.   268.45\n"," 231.4  194.3  236.3  236.9  281.3  285.9  178.05 153.8  110.6   92.4\n","  72.55  76.65  75.35  70.5   48.5   40.7   87.95  30.45  31.6   31.95\n","  28.3   15.34  14.01  14.9 ]\n","\n","\n","Unique values for column 'Low':\n","[ 11.25  12.55  12.27  12.4   12.88  13.    13.58  15.4   16.02  18.02\n","  15.8   13.4   13.82  15.7   16.8   18.5   21.4   24.4   27.    26.8\n","  23.31  26.2   29.11  30.4   35.02  30.2   35.3   33.6   40.02  45.\n","  30.24  44.4   24.11  28.51  30.03  22.62  20.4   24.62  21.7   11.01\n","  11.13  11.48   9.9    8.16   9.94  14.76  23.    24.83  29.    32.\n","  36.8   42.84  48.6   46.42  44.6   47.3   48.8   50.66  52.6   53.02\n","  59.01  62.51  68.21  58.    55.44  49.39  46.71  50.8   60.5   54.5\n","  54.8   61.36  50.51  51.2   48.1   52.04  47.4   46.11  63.6   66.2\n","  69.11  58.85  62.14  67.57  65.27  64.46  75.6   82.22  88.01  93.2\n","  93.4   83.42  83.43  97.2   87.15  57.71  43.22  44.8   56.08  64.65\n","  71.63  60.8   58.42  60.34  80.8   86.98 101.62 100.44 103.31 107.18\n"," 109.2  132.44 134.   150.47 156.1  156.8  154.53 157.8  158.9  156.45\n"," 118.   127.   141.73 144.03 133.71 126.45 132.74 138.35 165.33 181.28\n"," 201.14 221.35 240.68 231.2  245.8  219.1  218.25 226.3  275.61 283.6\n"," 300.2  275.15 280.21 290.78 337.37 345.5  299.   296.   300.65 307.35\n"," 304.65 285.1  303.3  325.7  327.35 332.45 338.   166.15 168.6  147.\n"," 160.2  181.15 167.65 228.8  165.3  133.05  98.75  81.75  53.15  40.95\n","  29.05  59.95  40.7   36.55   5.55  20.3   25.2   25.55  11.1   11.85\n","  12.75  12.11  12.21]\n","\n","\n","Unique values for column 'Close':\n","[ 12.46  13.42  13.3   12.99  13.41  13.71  15.33  16.12  20.08  19.49\n","  18.03  15.62  16.16  17.84  18.46  22.78  25.32  26.97  30.16  28.63\n","  28.14  30.31  33.51  35.98  37.93  36.99  41.36  43.48  46.18  49.81\n","  50.54  49.42  33.75  34.06  31.13  22.85  25.45  26.83  24.13  13.58\n","  12.26  15.03  12.24  10.26   9.98  15.45  25.12  29.68  31.93  33.45\n","  40.99  47.31  50.57  53.41  49.84  47.32  50.97  57.1   57.57  53.83\n","  58.99  62.22  70.3   71.86  61.21  62.54  52.59  51.29  61.98  61.02\n","  60.07  62.38  62.13  55.61  54.5   62.9   54.49  47.72  65.99  69.14\n","  73.46  70.07  66.02  67.83  72.85  65.97  76.44  82.29  88.48  92.84\n"," 104.41  94.5   85.71 100.28  97.49  92.2   64.76  48.65  57.5   73.76\n","  73.74  74.02  61.59  60.95  82.7   88.14 113.89 108.38 108.21 114.33\n"," 111.7  136.83 142.08 154.57 172.5  172.55 163.31 167.96 176.52 168.6\n"," 165.74 137.9  145.92 151.82 153.3  145.23 149.38 137.67 172.91 188.73\n"," 206.39 221.3  243.44 272.56 250.85 253.52 234.28 231.26 279.1  290.56\n"," 309.82 326.14 286.38 292.37 361.96 351.15 350.   314.35 306.8  315.05\n"," 354.45 322.25 304.9  362.05 346.2  339.6  367.9  343.4  183.45 188.05\n"," 169.65 181.75 194.3  231.2  275.05 168.   147.95 108.7   91.3   59.5\n","  41.45  70.45  68.3   46.95  39.2   34.55  22.45  27.95  26.85  25.6\n","  11.95  14.37  13.15  12.42  14.67]\n","\n","\n"]}]},{"cell_type":"markdown","source":["## 3. ***Data Wrangling***"],"metadata":{"id":"dauF4eBmngu3"}},{"cell_type":"markdown","source":["### Data Wrangling Code"],"metadata":{"id":"bKJF3rekwFvQ"}},{"cell_type":"code","source":["# Write your code to make your dataset analysis ready.\n","\n","\n","#Check for missing values\n","missing_values = yesbank.isnull().sum()\n","print(missing_values)\n","\n","# Example: Fill missing values using forward fill\n","yesbank.fillna(method='ffill', inplace=True)"],"metadata":{"id":"wk-9a2fpoLcV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1692341898104,"user_tz":-330,"elapsed":57,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"da03c2c5-783b-43e1-a24e-18d867482f68"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Date     0\n","Open     0\n","High     0\n","Low      0\n","Close    0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["yesbank = pd.read_csv(\"/content/drive/MyDrive/data_YesBank_StockPrices.csv\", parse_dates= [\"Date\"], index_col = 'Date')\n","yesbank"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"i4vuAlmdccgD","executionInfo":{"status":"ok","timestamp":1692341898104,"user_tz":-330,"elapsed":42,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"4286a904-5754-409b-ab5c-7c96bd52d615"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Open   High    Low  Close\n","Date                              \n","Jul-05  13.00  14.00  11.25  12.46\n","Aug-05  12.58  14.88  12.55  13.42\n","Sep-05  13.48  14.87  12.27  13.30\n","Oct-05  13.20  14.47  12.40  12.99\n","Nov-05  13.35  13.88  12.88  13.41\n","...       ...    ...    ...    ...\n","Jul-20  25.60  28.30  11.10  11.95\n","Aug-20  12.00  17.16  11.85  14.37\n","Sep-20  14.30  15.34  12.75  13.15\n","Oct-20  13.30  14.01  12.11  12.42\n","Nov-20  12.41  14.90  12.21  14.67\n","\n","[185 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-0c761cc2-6fe4-41eb-a0a8-197150e93cc4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Jul-05</th>\n","      <td>13.00</td>\n","      <td>14.00</td>\n","      <td>11.25</td>\n","      <td>12.46</td>\n","    </tr>\n","    <tr>\n","      <th>Aug-05</th>\n","      <td>12.58</td>\n","      <td>14.88</td>\n","      <td>12.55</td>\n","      <td>13.42</td>\n","    </tr>\n","    <tr>\n","      <th>Sep-05</th>\n","      <td>13.48</td>\n","      <td>14.87</td>\n","      <td>12.27</td>\n","      <td>13.30</td>\n","    </tr>\n","    <tr>\n","      <th>Oct-05</th>\n","      <td>13.20</td>\n","      <td>14.47</td>\n","      <td>12.40</td>\n","      <td>12.99</td>\n","    </tr>\n","    <tr>\n","      <th>Nov-05</th>\n","      <td>13.35</td>\n","      <td>13.88</td>\n","      <td>12.88</td>\n","      <td>13.41</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Jul-20</th>\n","      <td>25.60</td>\n","      <td>28.30</td>\n","      <td>11.10</td>\n","      <td>11.95</td>\n","    </tr>\n","    <tr>\n","      <th>Aug-20</th>\n","      <td>12.00</td>\n","      <td>17.16</td>\n","      <td>11.85</td>\n","      <td>14.37</td>\n","    </tr>\n","    <tr>\n","      <th>Sep-20</th>\n","      <td>14.30</td>\n","      <td>15.34</td>\n","      <td>12.75</td>\n","      <td>13.15</td>\n","    </tr>\n","    <tr>\n","      <th>Oct-20</th>\n","      <td>13.30</td>\n","      <td>14.01</td>\n","      <td>12.11</td>\n","      <td>12.42</td>\n","    </tr>\n","    <tr>\n","      <th>Nov-20</th>\n","      <td>12.41</td>\n","      <td>14.90</td>\n","      <td>12.21</td>\n","      <td>14.67</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>185 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0c761cc2-6fe4-41eb-a0a8-197150e93cc4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0c761cc2-6fe4-41eb-a0a8-197150e93cc4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0c761cc2-6fe4-41eb-a0a8-197150e93cc4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-99d4cadb-9ad0-4da7-ac0c-48b13a3edbdd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-99d4cadb-9ad0-4da7-ac0c-48b13a3edbdd')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-99d4cadb-9ad0-4da7-ac0c-48b13a3edbdd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["# Plot the closing price over time\n","plt.plot(yesbank.index, yesbank['Close'], label='Closing Price', color='blue')\n","plt.title('Yes Bank Stock Closing Price')\n","plt.xlabel('Date')\n","plt.ylabel('Closing Price')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"ACuXMiRnb2z1","executionInfo":{"status":"ok","timestamp":1692341899194,"user_tz":-330,"elapsed":1130,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"0746895b-1939-4bc5-cf65-c4c4586641fb"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["scaler = StandardScaler()\n","yesbank[['Open', 'High', 'Low', 'Close']] = scaler.fit_transform(yesbank[['Open', 'High', 'Low', 'Close']])\n","yesbank"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"yaMq2CPneQRF","executionInfo":{"status":"ok","timestamp":1692341899196,"user_tz":-330,"elapsed":69,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"2e6fa122-ee95-4d8b-e0ff-494d11dfec87"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Open      High       Low     Close\n","Date                                          \n","Jul-05 -0.938437 -0.962833 -0.920034 -0.943329\n","Aug-05 -0.942696 -0.954535 -0.905744 -0.933565\n","Sep-05 -0.933570 -0.954629 -0.908822 -0.934786\n","Oct-05 -0.936409 -0.958401 -0.907393 -0.937939\n","Nov-05 -0.934888 -0.963965 -0.902117 -0.933667\n","...          ...       ...       ...       ...\n","Jul-20 -0.810664 -0.827986 -0.921683 -0.948517\n","Aug-20 -0.948578 -0.933035 -0.913439 -0.923902\n","Sep-20 -0.925254 -0.950197 -0.903546 -0.936311\n","Oct-20 -0.935395 -0.962739 -0.910581 -0.943736\n","Nov-20 -0.944420 -0.954346 -0.909481 -0.920851\n","\n","[185 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-4043d826-9b37-4175-9767-43db18148263\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Close</th>\n","    </tr>\n","    <tr>\n","      <th>Date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Jul-05</th>\n","      <td>-0.938437</td>\n","      <td>-0.962833</td>\n","      <td>-0.920034</td>\n","      <td>-0.943329</td>\n","    </tr>\n","    <tr>\n","      <th>Aug-05</th>\n","      <td>-0.942696</td>\n","      <td>-0.954535</td>\n","      <td>-0.905744</td>\n","      <td>-0.933565</td>\n","    </tr>\n","    <tr>\n","      <th>Sep-05</th>\n","      <td>-0.933570</td>\n","      <td>-0.954629</td>\n","      <td>-0.908822</td>\n","      <td>-0.934786</td>\n","    </tr>\n","    <tr>\n","      <th>Oct-05</th>\n","      <td>-0.936409</td>\n","      <td>-0.958401</td>\n","      <td>-0.907393</td>\n","      <td>-0.937939</td>\n","    </tr>\n","    <tr>\n","      <th>Nov-05</th>\n","      <td>-0.934888</td>\n","      <td>-0.963965</td>\n","      <td>-0.902117</td>\n","      <td>-0.933667</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Jul-20</th>\n","      <td>-0.810664</td>\n","      <td>-0.827986</td>\n","      <td>-0.921683</td>\n","      <td>-0.948517</td>\n","    </tr>\n","    <tr>\n","      <th>Aug-20</th>\n","      <td>-0.948578</td>\n","      <td>-0.933035</td>\n","      <td>-0.913439</td>\n","      <td>-0.923902</td>\n","    </tr>\n","    <tr>\n","      <th>Sep-20</th>\n","      <td>-0.925254</td>\n","      <td>-0.950197</td>\n","      <td>-0.903546</td>\n","      <td>-0.936311</td>\n","    </tr>\n","    <tr>\n","      <th>Oct-20</th>\n","      <td>-0.935395</td>\n","      <td>-0.962739</td>\n","      <td>-0.910581</td>\n","      <td>-0.943736</td>\n","    </tr>\n","    <tr>\n","      <th>Nov-20</th>\n","      <td>-0.944420</td>\n","      <td>-0.954346</td>\n","      <td>-0.909481</td>\n","      <td>-0.920851</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>185 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4043d826-9b37-4175-9767-43db18148263')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-4043d826-9b37-4175-9767-43db18148263 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-4043d826-9b37-4175-9767-43db18148263');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e82a7d9b-ee65-41da-8a74-c257f207b305\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e82a7d9b-ee65-41da-8a74-c257f207b305')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e82a7d9b-ee65-41da-8a74-c257f207b305 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["# Separate the features (X) and the target variable (y)\n","X = yesbank.drop('Close', axis=1)\n","y = yesbank['Close']\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, shuffle=False)"],"metadata":{"id":"NTG46Kh3fHVS","executionInfo":{"status":"ok","timestamp":1692341899197,"user_tz":-330,"elapsed":66,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":22,"outputs":[]},{"cell_type":"markdown","source":["### What all manipulations have you done and insights you found?"],"metadata":{"id":"MSa1f5Uengrz"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"LbyXE7I1olp8"}},{"cell_type":"code","source":["'''\n","1- Handling missing values\n","2- Scaling numerical features\n","3- Split the data into training and testing sets\n","4- Duplicate Value Count'''"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"4PmHqO1Nnhwr","executionInfo":{"status":"ok","timestamp":1692341899199,"user_tz":-330,"elapsed":66,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"340238e8-6c66-4509-d7a0-d0ebfdb9ea8b"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n1- Handling missing values\\n2- Scaling numerical features\\n3- Split the data into training and testing sets\\n4- Duplicate Value Count'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["## ***4. Data Vizualization, Storytelling & Experimenting with charts : Understand the relationships between variables***"],"metadata":{"id":"GF8Ens_Soomf"}},{"cell_type":"markdown","source":["#### Chart - 1"],"metadata":{"id":"0wOQAZs5pc--"}},{"cell_type":"code","source":["# Chart - 1 visualization code\n","\n","import plotly.graph_objects as go\n","# Line Plot of Closing Price over Time\n","plt.figure(figsize=(12, 6))\n","plt.plot(yesbank.index, yesbank['Close'], color='blue')\n","plt.title('Yes Bank Stock Closing Price over Time')\n","plt.xlabel('Date')\n","plt.ylabel('Closing Price')\n","plt.grid(True)\n","plt.show()\n","\n","\n","\n","\n","\n"],"metadata":{"id":"7v_ESjsspbW7","colab":{"base_uri":"https://localhost:8080/","height":564},"executionInfo":{"status":"ok","timestamp":1692341900556,"user_tz":-330,"elapsed":1420,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"9cab5d10-c702-4f82-d1f9-e1432b7b74c9"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"K5QZ13OEpz2H"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"XESiWehPqBRc"}},{"cell_type":"code","source":["'''Because a line plot of the closing price over time is a versatile and\n","   fundamental visualization that allows you to uncover trends, patterns, and\n","   anomalies in the stock price of Yes Bank. It provides a clear and concise\n","   representation of the stock's historical performance, helping you make\n","   informed decisions or draw meaningful insights from the data.'''"],"metadata":{"id":"QsynE48DsJVC","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341900557,"user_tz":-330,"elapsed":74,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"7093d6e3-ba07-476b-d19b-aaf1e505a784"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"Because a line plot of the closing price over time is a versatile and\\n   fundamental visualization that allows you to uncover trends, patterns, and\\n   anomalies in the stock price of Yes Bank. It provides a clear and concise\\n   representation of the stock's historical performance, helping you make\\n   informed decisions or draw meaningful insights from the data.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"lQ7QKXXCp7Bj"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"C_j1G7yiqdRP"}},{"cell_type":"code","source":["'''\n","1- Trend identification\n","2- Seasonal patterns\n","3- Long-term performance'''"],"metadata":{"id":"0sc_Powks8wZ","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341900558,"user_tz":-330,"elapsed":68,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"271c5476-60fa-4861-b550-11415c737010"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n1- Trend identification\\n2- Seasonal patterns\\n3- Long-term performance'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"448CDAPjqfQr"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"3cspy4FjqxJW"}},{"cell_type":"code","source":["'''\n","The gained insights help creating a positive business impact in the following\n","ways-\n","     1- Risk management\n","     2- Trading strategies\n","\n","There are some insights that lead to negative growth like-\n","    1- High volatility\n","    2- Market underperformance\n","    3- Lack of positive catalysts'''"],"metadata":{"id":"o68NXK2steC0","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341900559,"user_tz":-330,"elapsed":65,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"1b0d8900-ea1b-4a65-f203-2a8a021d1f8d"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nThe gained insights help creating a positive business impact in the following\\nways-\\n     1- Risk management\\n     2- Trading strategies\\n\\nThere are some insights that lead to negative growth like-\\n    1- High volatility\\n    2- Market underperformance\\n    3- Lack of positive catalysts'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":27}]},{"cell_type":"markdown","source":["#### Chart - 2"],"metadata":{"id":"KSlN3yHqYklG"}},{"cell_type":"code","source":["# Chart - 2 visualization code\n","\n","# Candlestick Chart of High, Low, Open, Close Prices\n","fig = go.Figure(data=[go.Candlestick(x=yesbank.index,\n","                open=yesbank['Open'],\n","                high=yesbank['High'],\n","                low=yesbank['Low'],\n","                close=yesbank['Close'])])\n","\n","fig.update_layout(title='Yes Bank Stock Candlestick Chart',\n","                  xaxis_title='Date',\n","                  yaxis_title='Price',\n","                  xaxis_rangeslider_visible=False)\n","fig.show()\n","\n"],"metadata":{"id":"R4YgtaqtYklH","colab":{"base_uri":"https://localhost:8080/","height":542},"executionInfo":{"status":"ok","timestamp":1692341901830,"user_tz":-330,"elapsed":1333,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"86777570-b2c3-4f40-b8e8-0fddd1d89075"},"execution_count":28,"outputs":[{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-2.24.1.min.js\"></script>                <div id=\"065aa69b-8319-4f42-8465-f9be62201748\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"065aa69b-8319-4f42-8465-f9be62201748\")) {                    Plotly.newPlot(                        \"065aa69b-8319-4f42-8465-f9be62201748\",                        [{\"close\":[-0.9433293860889987,-0.9335649878618744,-0.934785537640265,-0.9379386245677739,-0.9336667003434069,-0.9306153258974307,-0.9141379038891584,-0.9061026178480873,-0.8658244751611996,-0.8718255115716198,-0.8866755338753713,-0.9111882419247145,-0.9056957679219572,-0.8886080710244896,-0.8823018971694719,-0.8383621051474126,-0.8125271348381462,-0.7957445753852764,-0.7632982937763948,-0.7788603034508741,-0.7838442150459687,-0.7617726065534065,-0.7292246124629922,-0.7041016295244538,-0.6842676956256076,-0.6938286688896669,-0.6493803144599448,-0.6278172683750454,-0.6003548983612583,-0.5634332675649446,-0.5560082564130688,-0.5674000543447139,-0.7267835129062112,-0.7236304259787023,-0.753432183067738,-0.8376501177766847,-0.8112048725782232,-0.797168550126732,-0.8246309201405192,-0.9319375881573536,-0.9453636357196494,-0.9171892783351346,-0.9455670606827147,-0.9657061320261584,-0.9685540815090696,-0.9129173541107678,-0.8145613844687971,-0.7681804928899569,-0.7452951845451344,-0.7298348873521875,-0.653143676276649,-0.5888613879480807,-0.5557031189684712,-0.5268167742132286,-0.5631281301203469,-0.5887596754665482,-0.5516346197071694,-0.48928486852771963,-0.48450438189569,-0.5225448499888617,-0.4700612095180687,-0.43720807798305683,-0.3550243929047608,-0.33915724578568385,-0.4474810386178438,-0.4339532785740154,-0.5351571976988972,-0.548379820298128,-0.4396491775398379,-0.4494135757669621,-0.4590762615125539,-0.4355806782785361,-0.43812349031684966,-0.5044400282760688,-0.5157301137261812,-0.4302916292388438,-0.5158318262077137,-0.5846911762052465,-0.39886247244528755,-0.36682304076253597,-0.32288324874047675,-0.35736377998000934,-0.3985573350006899,-0.38014737584329933,-0.329087710113962,-0.3990658974083526,-0.2925729292437784,-0.23307112754723977,-0.17011110147859468,-0.12576445953040524,-0.00808311839725124,-0.10888018759600289,-0.19828545886310964,-0.050090373270192105,-0.07846815561777211,-0.1322740583484881,-0.41137310767379043,-0.5752319154227198,-0.48521636926641787,-0.3198318742945003,-0.32003529925756546,-0.31718734977465424,-0.4436159643196071,-0.4501255631376899,-0.22890091580440547,-0.17356932585070123,0.08834031409560106,0.03229673677116895,0.03056762458511567,0.092815663283033,0.06606528063997383,0.32166874673125845,0.37506779953584435,0.5021066889699923,0.6844771683578449,0.6849857307655077,0.5910033978294364,0.6382997017420697,0.7253655859339279,0.6448093005601524,0.6157195308418448,0.33255198225524063,0.4141253924443412,0.47413575654854256,0.48918920381535935,0.40710723121859566,0.4493179110546017,0.33021259517999196,0.6886473801006792,0.8495565258851646,1.0291807682716383,1.1808340782366624,1.4060255123497158,1.702212258572486,1.4813944611653318,1.5085516937345214,1.3128568792659054,1.2821397098430767,1.7687322214947703,1.8852947253310661,2.0811929647627467,2.2471877346238593,1.8427789080504624,1.9037046844884566,2.611521843473434,2.5015706509367535,2.489873715560511,2.12726871889699,2.0504757953399184,2.134388592604268,2.5351357698424932,2.2076215793076996,2.0311504238487346,2.6124372558072273,2.451222972578144,2.3840927347666647,2.671939057503766,2.4227434777490315,0.795852335635981,0.8426400771409518,0.6554891111210697,0.7785612137754486,0.9062103780987921,1.2815294349538815,1.7275386664740895,0.6387065516681998,0.4347730261954478,0.035551536180210445,-0.1414281816864172,-0.46487387295990895,-0.6484649021261518,-0.35349870568177255,-0.3753668892112697,-0.5925230372832524,-0.6713502104709744,-0.7186465143836077,-0.8417186170379866,-0.785776752195087,-0.7969651251636669,-0.809679185355235,-0.9485167226471584,-0.9239023021162825,-0.936311224863253,-0.9437362360151288,-0.9208509276703063],\"high\":[-0.9628330564983795,-0.9545347489063598,-0.9546290478562691,-0.9584010058526417,-0.9639646438972912,-0.9586839027023696,-0.9330345883270362,-0.9348262683753132,-0.8972952863114063,-0.8987097705600461,-0.8892798755691147,-0.9213415185382813,-0.932657392527399,-0.9194555395400951,-0.9168151689426343,-0.8666481275908793,-0.8263824759796023,-0.815160900940394,-0.7727263734812028,-0.7874370096670558,-0.7970555025578057,-0.7931892456115238,-0.7540551813991586,-0.751792006601335,-0.7078486959435949,-0.7270856817250948,-0.7011534705000335,-0.6488175533003644,-0.6141155397337369,-0.5856372568611241,-0.5709266206752711,-0.585920153710852,-0.633729721314874,-0.7572613456960753,-0.7470770591058694,-0.7910203697636096,-0.8072397891480115,-0.8215732295342273,-0.8138407156416636,-0.8591042115981342,-0.9269994555328402,-0.9386925253215951,-0.9219073122377371,-0.9769778989847765,-0.9888595666733501,-0.9297341250802102,-0.8228934148329576,-0.8017704500532714,-0.7821562684721342,-0.7631078805904526,-0.7053969232459527,-0.6012908825460701,-0.5763959597700113,-0.5698893322262686,-0.5518782327935897,-0.6094005922382713,-0.6039312531435309,-0.53396143231082,-0.5471632852981241,-0.5300008764146289,-0.5201937856240603,-0.4453204193960651,-0.41835091972200134,-0.3781795670606336,-0.3630917350751435,-0.4502239647913494,-0.49567605864763864,-0.5508409443445873,-0.48002243296269254,-0.45116695429044246,-0.5132156633307711,-0.49709054289627835,-0.4536187269880847,-0.4917155027514475,-0.5283034953162613,-0.4837943909590651,-0.4941672754490896,-0.5309438659137221,-0.4677635694744818,-0.3894954410497513,-0.36045136447768267,-0.3772365775615405,-0.4291952989615724,-0.4291010000116631,-0.4046775719851508,-0.3896840389495699,-0.36224304452595957,-0.30085442813499624,-0.24993299518396683,-0.1990115622329373,-0.0858528223417607,-0.07830890634901562,-0.15044760302964064,-0.13488827629460393,-0.06293817751379738,-0.12413819600494214,-0.1480901292819078,-0.4554104070363616,-0.35045567578729536,-0.37403041326462383,-0.3662036004221508,-0.3121703021241139,-0.3748791038138077,-0.503597170440021,-0.3087755399273786,-0.1992001601327559,0.014104064562111917,0.013821167712383965,-0.015505805709412634,0.02438265010222716,0.10133059322822723,0.20458794337892605,0.2622046017735167,0.3667821372229457,0.593099617005299,0.5448185546517302,0.6213893019780931,0.5346342680615245,0.573862631223799,0.5968715750016715,0.5608493761363137,0.500592347144262,0.3714970847184114,0.3756462385144212,0.3946946263961027,0.36225578762729876,0.31868967276919574,0.3936573379471001,0.5565116244404852,0.7009776157015539,0.8759964667332405,1.00801499660628,1.2360298574870008,1.4983695361347118,1.6398179609986825,1.4087855337208637,1.3825704256460747,1.2154726864067704,1.586161858500283,1.6793292210106852,1.8432207959530724,2.022483099730678,2.0198427291332175,1.7939024451505012,2.413069350255056,2.380253315686615,2.519155668903034,2.4484314564710483,2.015127781637752,1.9132849157356928,2.3564899803094677,2.3612049278049336,1.9774082016740262,2.382422191534529,2.3414021483239775,2.206554649953659,2.614397608311441,2.71482598996486,2.2056116604545655,1.4366037239441112,1.0872261145301036,0.7373770103665492,1.1334325999856674,1.1390905369802262,1.5577778745775797,1.6011553915358636,0.5841412167639143,0.3554662632338282,-0.051905200374407774,-0.22352928920935886,-0.4107127047793469,-0.37205013531652814,-0.38430899880473907,-0.43004398951075623,-0.6375016793112467,-0.7110548602405115,-0.2654923219190035,-0.8077112838975581,-0.7968669046579872,-0.7935664414111611,-0.8279855581280606,-0.9330345883270362,-0.9501969972105313,-0.96273875754847,-0.9543461510065411],\"low\":[-0.9200340627366118,-0.9057440367042202,-0.9088218884650431,-0.9073928858618038,-0.9021165685575362,-0.9007974892314692,-0.8944219391554792,-0.8744159027101308,-0.8676006595254518,-0.8456160040910031,-0.8700189716232412,-0.8964005581445794,-0.8917837805033454,-0.8711182043949636,-0.8590266439060168,-0.8403396867867354,-0.8084619364067849,-0.7754849532551118,-0.7469049011903286,-0.7491033667337735,-0.7874665904668864,-0.7556987633641081,-0.7237110897069853,-0.7095309869517659,-0.6587464328981895,-0.7117294524952108,-0.6556685811373668,-0.6743555382566481,-0.6037847943120679,-0.5490430022802908,-0.7112897593865218,-0.5556383989106254,-0.778672728293107,-0.7303064863373199,-0.713598148207139,-0.7950512965917712,-0.8194542641240091,-0.7730666411573225,-0.8051642380916175,-0.9226722213887456,-0.9200340627366118,-0.9213531420626788,-0.9175058273616502,-0.9348737051548646,-0.954000355382835,-0.9344340120461757,-0.8814509924491544,-0.7908742120592259,-0.7707582523367055,-0.72492024575588,-0.691943262604207,-0.6391800895615303,-0.5727864301494953,-0.5094706224982831,-0.5334338969218322,-0.5534399333671804,-0.5237606485306748,-0.5072721569548383,-0.48682642740080107,-0.46550131162938585,-0.4608845339881516,-0.39504049096197796,-0.3565673439516928,-0.2939110759635142,-0.4061427419563745,-0.4342831009124688,-0.500786683601676,-0.5302461218838371,-0.4852875015203897,-0.37866192266331367,-0.44461588896665966,-0.44131819065149236,-0.36920852082650074,-0.48847527655838474,-0.48089057043349986,-0.5149667863568953,-0.4716570151510315,-0.5226614157589524,-0.5368415185141717,-0.34458570673991823,-0.316005654675135,-0.28401798101801223,-0.39679926339673377,-0.36063450520706575,-0.30094616570253774,-0.32622851945215364,-0.3351323049031054,-0.2126777741332264,-0.1399085646452013,-0.07626298716247236,-0.01921280631007812,-0.01701434076663322,-0.12671777138453205,-0.12660784810735976,0.02475650455881919,-0.08571638899928527,-0.4093305169943695,-0.5686093456169501,-0.5512414678237356,-0.42724801117344524,-0.33304376263683266,-0.25631731517060696,-0.3753642243481464,-0.40152596431514026,-0.38042069509806953,-0.15551767000365985,-0.08758508471121343,0.07334259306895075,0.06037164636262596,0.09191962691105983,0.13445993517671803,0.15666443716551112,0.41212613331380443,0.4292741645526744,0.6103178020553591,0.672204607103332,0.6798992365053892,0.6549466525872899,0.6908915642226136,0.7029831247115602,0.6760519218043605,0.25339692107708517,0.3523278705321041,0.5142448578068184,0.5395272115564345,0.4260863895146795,0.3462820902876308,0.4154238316289719,0.4770907901226002,0.7736637919333127,0.9489914190230406,1.1672990474871157,1.3894539906522194,1.6019356854261657,1.497728418666879,1.6582164033383544,1.3647212532884647,1.355377774728824,1.44386601285248,1.9858976925888117,2.073726391049434,2.2561990311553575,1.980841221838888,2.0364624000880434,2.152651304059104,2.664783852404586,2.7541514767456197,2.2430082378946885,2.2100312547430154,2.2611455786281085,2.334794174333512,2.3051148894970055,2.0902148826252707,2.2902752470787533,2.536503387944578,2.5546407286779984,2.610701600035842,2.671709018866437,0.7826775006614366,0.8096087035686361,0.5721744248765906,0.7172731507439517,0.9475624164198015,0.7991659922372731,1.4713468321455407,0.773334022101796,0.41883145322131143,0.04179461252051687,-0.1450749586722967,-0.4594555313849125,-0.5935619295350493,-0.7243706293700188,-0.384707702907787,-0.5963100114643554,-0.6419281714908364,-0.6743555382566481,-0.9826903307247905,-0.8205534968957316,-0.7666910910813324,-0.762843776380304,-0.9216829118941955,-0.9134386661062773,-0.9035455711607753,-0.9105806608997989,-0.9094814281280764],\"open\":[-0.9384372677064238,-0.9426963736786104,-0.9335697180239249,-0.9364091220053826,-0.9348880127296018,-0.9334683107388729,-0.9315415723228838,-0.9130854464434087,-0.9059869364897645,-0.8617733602070661,-0.8694803138710226,-0.8857054794793523,-0.9080150821908056,-0.9090291550413262,-0.8877336251803936,-0.8798238569463328,-0.8390581283554045,-0.8126922342418689,-0.7924107772314568,-0.7640167374168797,-0.7731433930715652,-0.7964670686335391,-0.759352002304485,-0.7265974492326694,-0.7054033266567887,-0.6899894193288756,-0.6910034921793963,-0.6463842867564896,-0.6200183926429539,-0.5997369356325417,-0.563331720298852,-0.5543064719292186,-0.5743851143695267,-0.7264960419476174,-0.722439750545535,-0.7536731943415695,-0.8385510919301441,-0.8167485256439512,-0.7997121017552051,-0.8208048170460336,-0.9202853636821049,-0.9445217048095473,-0.915316406714554,-0.9466512577956407,-0.9688594532220419,-0.9684538240818337,-0.9086235259011181,-0.8106640885408275,-0.7690871016694828,-0.745966240677613,-0.727510114798138,-0.6524687238596132,-0.5979116045016046,-0.5532923990786981,-0.5267236903950582,-0.573371041519006,-0.5855399157252533,-0.5564360249153119,-0.49285365718767,-0.4952874320289194,-0.5272307268203185,-0.4679074650648631,-0.4334289881471625,-0.3512890872549934,-0.3381061401982256,-0.4435697166523686,-0.43160365701622544,-0.5328081274981818,-0.5445713725642207,-0.44154157095132734,-0.44904571004517985,-0.45776673655965705,-0.4314008424461213,-0.4324149152966419,-0.5023859419825636,-0.524695544694017,-0.4395134252502861,-0.4922452134773576,-0.5843230283046286,-0.4019927297810237,-0.370556471414885,-0.323706305720833,-0.35635945150759646,-0.40655605760836644,-0.37917609064431007,-0.3299935573940608,-0.3989505112294619,-0.29551508047636016,-0.233251007454395,-0.16571375560972273,-0.12515084158889853,-0.011473275045538774,-0.11703825878473373,-0.20120630537794393,-0.04615456653334348,-0.06633461625870347,-0.13326342439306335,-0.40097865693050316,-0.5713428958179647,-0.4821044849721515,-0.31985282888885475,-0.3157965374867723,-0.3123486897950023,-0.44620630606372214,-0.45654984913903224,-0.22402294451465754,-0.1697700470118052,0.0938888941235521,0.029292453545389653,0.018847503185027408,0.09186074842251085,0.06650892715949573,0.320027139789647,0.3705279677455733,0.4954617429297118,0.6790089288739413,0.7023326044359153,0.5806438623734427,0.6536571076109261,0.7246422071473685,0.64351637910572,0.6120801207395814,0.30491745431689016,0.4200147228509788,0.4683859978208115,0.48126472302242324,0.4001388949807749,0.45489882890888755,0.3372663782484975,0.6741413791914425,0.854443532014006,1.0227796252004264,1.1805693607414325,1.404071016996174,1.7011943621987113,1.4994952722301627,1.5156190305534405,1.3168607518514017,1.282179460363597,1.773193534585674,1.8766289653387762,2.0693028069376913,2.23561075442307,1.8366744950282643,1.9013723428914788,2.610817709115694,2.4891289670532215,2.5256355896719636,2.129133105118407,2.044965058525196,2.1139220123605975,2.5296918810740454,2.181864893345478,2.022655455813743,2.6092965998399134,2.4587067815376034,2.3775809534959547,2.6812957722268758,2.4505941987334383,0.7550643926629866,0.8767531347254592,0.6942200216317503,0.7839654689028238,0.9274567772514895,1.3087481690472367,1.7387150576679737,0.5857142266260457,0.43005404407113257,0.041157105896480604,-0.16571375560972273,-0.46689339221434245,-0.6443561410554484,-0.3502750144044729,-0.3604157429096789,-0.5946665713799387,-0.6737642537205458,-0.7133130948908495,-0.8441284926080076,-0.7883544858293743,-0.7888615222546346,-0.8106640885408275,-0.9485779962116299,-0.925254320649656,-0.935395049154862,-0.9444202975244954],\"x\":[\"Jul-05\",\"Aug-05\",\"Sep-05\",\"Oct-05\",\"Nov-05\",\"Dec-05\",\"Jan-06\",\"Feb-06\",\"Mar-06\",\"Apr-06\",\"May-06\",\"Jun-06\",\"Jul-06\",\"Aug-06\",\"Sep-06\",\"Oct-06\",\"Nov-06\",\"Dec-06\",\"Jan-07\",\"Feb-07\",\"Mar-07\",\"Apr-07\",\"May-07\",\"Jun-07\",\"Jul-07\",\"Aug-07\",\"Sep-07\",\"Oct-07\",\"Nov-07\",\"Dec-07\",\"Jan-08\",\"Feb-08\",\"Mar-08\",\"Apr-08\",\"May-08\",\"Jun-08\",\"Jul-08\",\"Aug-08\",\"Sep-08\",\"Oct-08\",\"Nov-08\",\"Dec-08\",\"Jan-09\",\"Feb-09\",\"Mar-09\",\"Apr-09\",\"May-09\",\"Jun-09\",\"Jul-09\",\"Aug-09\",\"Sep-09\",\"Oct-09\",\"Nov-09\",\"Dec-09\",\"Jan-10\",\"Feb-10\",\"Mar-10\",\"Apr-10\",\"May-10\",\"Jun-10\",\"Jul-10\",\"Aug-10\",\"Sep-10\",\"Oct-10\",\"Nov-10\",\"Dec-10\",\"Jan-11\",\"Feb-11\",\"Mar-11\",\"Apr-11\",\"May-11\",\"Jun-11\",\"Jul-11\",\"Aug-11\",\"Sep-11\",\"Oct-11\",\"Nov-11\",\"Dec-11\",\"Jan-12\",\"Feb-12\",\"Mar-12\",\"Apr-12\",\"May-12\",\"Jun-12\",\"Jul-12\",\"Aug-12\",\"Sep-12\",\"Oct-12\",\"Nov-12\",\"Dec-12\",\"Jan-13\",\"Feb-13\",\"Mar-13\",\"Apr-13\",\"May-13\",\"Jun-13\",\"Jul-13\",\"Aug-13\",\"Sep-13\",\"Oct-13\",\"Nov-13\",\"Dec-13\",\"Jan-14\",\"Feb-14\",\"Mar-14\",\"Apr-14\",\"May-14\",\"Jun-14\",\"Jul-14\",\"Aug-14\",\"Sep-14\",\"Oct-14\",\"Nov-14\",\"Dec-14\",\"Jan-15\",\"Feb-15\",\"Mar-15\",\"Apr-15\",\"May-15\",\"Jun-15\",\"Jul-15\",\"Aug-15\",\"Sep-15\",\"Oct-15\",\"Nov-15\",\"Dec-15\",\"Jan-16\",\"Feb-16\",\"Mar-16\",\"Apr-16\",\"May-16\",\"Jun-16\",\"Jul-16\",\"Aug-16\",\"Sep-16\",\"Oct-16\",\"Nov-16\",\"Dec-16\",\"Jan-17\",\"Feb-17\",\"Mar-17\",\"Apr-17\",\"May-17\",\"Jun-17\",\"Jul-17\",\"Aug-17\",\"Sep-17\",\"Oct-17\",\"Nov-17\",\"Dec-17\",\"Jan-18\",\"Feb-18\",\"Mar-18\",\"Apr-18\",\"May-18\",\"Jun-18\",\"Jul-18\",\"Aug-18\",\"Sep-18\",\"Oct-18\",\"Nov-18\",\"Dec-18\",\"Jan-19\",\"Feb-19\",\"Mar-19\",\"Apr-19\",\"May-19\",\"Jun-19\",\"Jul-19\",\"Aug-19\",\"Sep-19\",\"Oct-19\",\"Nov-19\",\"Dec-19\",\"Jan-20\",\"Feb-20\",\"Mar-20\",\"Apr-20\",\"May-20\",\"Jun-20\",\"Jul-20\",\"Aug-20\",\"Sep-20\",\"Oct-20\",\"Nov-20\"],\"type\":\"candlestick\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"rangeslider\":{\"visible\":false},\"title\":{\"text\":\"Date\"}},\"title\":{\"text\":\"Yes Bank Stock Candlestick Chart\"},\"yaxis\":{\"title\":{\"text\":\"Price\"}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('065aa69b-8319-4f42-8465-f9be62201748');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"t6dVpIINYklI"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"5aaW0BYyYklI"}},{"cell_type":"code","source":["'''\n","Using a candlestick chart of high, low, open, and close prices is beneficial for\n","visualizing and understanding the price movement.Candlestick charts provide more\n","detailed information compared to line plots, making them particularly useful for\n","technical analysis and identifying market trends'''"],"metadata":{"id":"m6wesXiquVo1","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341901831,"user_tz":-330,"elapsed":87,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"ea6b1d20-6ba8-43b2-b186-9bae6d48316e"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nUsing a candlestick chart of high, low, open, and close prices is beneficial for\\nvisualizing and understanding the price movement.Candlestick charts provide more\\ndetailed information compared to line plots, making them particularly useful for\\ntechnical analysis and identifying market trends'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":29}]},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"ijmpgYnKYklI"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"PSx9atu2YklI"}},{"cell_type":"code","source":["'''\n","1- Trend identification\n","2- Volatility Assessment\n","3- Price Range Analysis'''"],"metadata":{"id":"yIjPi6x0vvBG","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341901831,"user_tz":-330,"elapsed":83,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"ddf4593d-d09f-48df-d1a7-aeebcc4055c5"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n1- Trend identification\\n2- Volatility Assessment\\n3- Price Range Analysis'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":30}]},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"-JiQyfWJYklI"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"BcBbebzrYklV"}},{"cell_type":"code","source":["'''\n","The gained insights help creating a positive business impact in following ways-\n","       1- Trending strategies\n","       2- Risk management\n","       3- Financial Forecasting\n","\n","There are some insights that lead to negative growth like-\n","      1- Bearish Candlestick Patterns\n","      2- Repeated Lower Highs and Lower Lows\n","      3- Gap-Down Openings'''\n"],"metadata":{"id":"JrO4kAn4wEvt","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341901832,"user_tz":-330,"elapsed":81,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"1b49b8a3-3ad8-43df-fc6a-3af304ac92c9"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nThe gained insights help creating a positive business impact in following ways-\\n       1- Trending strategies\\n       2- Risk management\\n       3- Financial Forecasting\\n\\nThere are some insights that lead to negative growth like-\\n      1- Bearish Candlestick Patterns\\n      2- Repeated Lower Highs and Lower Lows\\n      3- Gap-Down Openings'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["#### Chart - 3"],"metadata":{"id":"EM7whBJCYoAo"}},{"cell_type":"code","source":["# Chart - 3 visualization code\n","\n","# Distribution of Closing Price\n","plt.figure(figsize=(8, 6))\n","sns.histplot(yesbank['Close'], bins=30, kde=True, color='blue')\n","plt.title('Distribution of Yes Bank Stock Closing Price')\n","plt.xlabel('Closing Price')\n","plt.ylabel('Frequency')\n","plt.grid(True)\n","plt.show()\n","\n"],"metadata":{"id":"t6GMdE67YoAp","colab":{"base_uri":"https://localhost:8080/","height":564},"executionInfo":{"status":"ok","timestamp":1692341901832,"user_tz":-330,"elapsed":78,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"e8e7bd31-81fc-4d75-b481-3288296af000"},"execution_count":32,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"fge-S5ZAYoAp"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"5dBItgRVYoAp"}},{"cell_type":"code","source":["'''\n","Using the distribution of closing prices is valuable for gaining insights into\n","the overall behavior and characteristics. This distribution can provide various\n","important information that aids investors, analysts, and decision-makers in\n","understanding the stock's performance and making informed choices.'''"],"metadata":{"id":"E0zFtlVSyUyx","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341901833,"user_tz":-330,"elapsed":75,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"a73ade56-1309-4a46-8bf1-a56a58f5aaec"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\"\\nUsing the distribution of closing prices is valuable for gaining insights into\\nthe overall behavior and characteristics. This distribution can provide various\\nimportant information that aids investors, analysts, and decision-makers in\\nunderstanding the stock's performance and making informed choices.\""],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":33}]},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"85gYPyotYoAp"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"4jstXR6OYoAp"}},{"cell_type":"code","source":["'''\n","1- Central tendency\n","2- Price range\n","3- Skewness and kurtosis\n","4- Outliers'''"],"metadata":{"id":"joRXgHSQyuaX","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341901833,"user_tz":-330,"elapsed":72,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"040a5f83-899f-4cdb-e217-7f68e1cd9803"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n1- Central tendency\\n2- Price range\\n3- Skewness and kurtosis\\n4- Outliers'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"RoGjAbkUYoAp"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"zfJ8IqMcYoAp"}},{"cell_type":"code","source":["'''\n","The gained insights help creating a positive business impact in followinng ways-\n","         1- Investment strategies\n","         2- Risk management\n","         3- Investor relations\n","\n","There are some insights that lead to negative growth, like-\n","         1- High volatiliy\n","         2- Long negative tail\n","         3- Skewed distribution'''"],"metadata":{"id":"NSadiAS0zDti","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341901833,"user_tz":-330,"elapsed":70,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"8749f6c6-1fd3-4190-d960-16f3d0ae78f9"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nThe gained insights help creating a positive business impact in followinng ways-\\n         1- Investment strategies\\n         2- Risk management\\n         3- Investor relations\\n\\nThere are some insights that lead to negative growth, like-\\n         1- High volatiliy\\n         2- Long negative tail\\n         3- Skewed distribution'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["#### Chart - 4"],"metadata":{"id":"4Of9eVA-YrdM"}},{"cell_type":"code","source":["# Chart - 4 visualization code\n","import seaborn as sns\n","\n","# Pair Plot of High, Low, Open, Close Prices\n","sns.pairplot(yesbank[['High', 'Low', 'Open', 'Close']], diag_kind='kde', markers='o', palette='Blues')\n","plt.suptitle('Pair Plot of High, Low, Open, Close Prices', y=1.02)\n","plt.show()\n","\n"],"metadata":{"id":"irlUoxc8YrdO","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1692341907729,"user_tz":-330,"elapsed":5963,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"5615b87b-9f4d-4bce-aacb-dacdd951da65"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1507: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1507: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1507: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1507: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n","/usr/local/lib/python3.10/dist-packages/seaborn/axisgrid.py:1609: UserWarning:\n","\n","Ignoring `palette` because no `hue` variable has been assigned.\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 20 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"iky9q4vBYrdO"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"aJRCwT6DYrdO"}},{"cell_type":"code","source":["'''\n","Using a pair plot of high, low, open, and close prices can be beneficial for\n","gaining insights into the relationships and correlations between these variables.\n","A pair plot allows us to visualize the scatterplots between all combinations of\n","two variables, providing a comprehensive view of their interactions.'''"],"metadata":{"id":"UQxx8nluEkVZ","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341907729,"user_tz":-330,"elapsed":118,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"22e0b495-e86d-48f9-b696-857dd5967f88"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nUsing a pair plot of high, low, open, and close prices can be beneficial for\\ngaining insights into the relationships and correlations between these variables.\\nA pair plot allows us to visualize the scatterplots between all combinations of\\ntwo variables, providing a comprehensive view of their interactions.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"F6T5p64dYrdO"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"Xx8WAJvtYrdO"}},{"cell_type":"code","source":["'''\n","1- Correlation analysis\n","2- Price trends\n","3- Identification of oiutliers'''"],"metadata":{"id":"wzS4v0m0FCXL","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341907730,"user_tz":-330,"elapsed":115,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"278a27dd-a852-438b-d77b-10d958880f3a"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n1- Correlation analysis\\n2- Price trends\\n3- Identification of oiutliers'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"y-Ehk30pYrdP"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"jLNxxz7MYrdP"}},{"cell_type":"code","source":["'''\n","The gained insights help creating a positive business impact in following ways-\n","      1- Trading strategies\n","      2- Risk management\n","      3- Technical analysis integration\n","\n","\n","There are some insights that lead to negative growth, like-\n","\n","      1- Strong Negative Correlation\n","      2- High Volatility and Spread\n","      3- Consistently Lower Closing Prices'''"],"metadata":{"id":"mEdo8pylFTQE","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341907730,"user_tz":-330,"elapsed":112,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"d95e50af-b1f3-483f-a8a7-0a492ad1a577"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nThe gained insights help creating a positive business impact in following ways-\\n      1- Trading strategies\\n      2- Risk management\\n      3- Technical analysis integration\\n\\n\\nThere are some insights that lead to negative growth, like-\\n\\n      1- Strong Negative Correlation\\n      2- High Volatility and Spread\\n      3- Consistently Lower Closing Prices'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["#### Chart - 5"],"metadata":{"id":"bamQiAODYuh1"}},{"cell_type":"code","source":["# Chart - 5 visualization code\n","# Correlation Heatmap\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(yesbank[['High', 'Low', 'Open', 'Close']].corr(), annot=True, cmap='coolwarm', center=0)\n","plt.title('Correlation Heatmap of High, Low, Open, Close Prices')\n","plt.show()"],"metadata":{"id":"TIJwrbroYuh3","colab":{"base_uri":"https://localhost:8080/","height":545},"executionInfo":{"status":"ok","timestamp":1692341907730,"user_tz":-330,"elapsed":109,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"145b39b1-c71b-4534-f603-ba5c794e282f"},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"QHF8YVU7Yuh3"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"dcxuIMRPYuh3"}},{"cell_type":"code","source":["'''\n","A correlation heatmap is a powerful and effective visualization tool that\n","displays the correlation coefficients between multiple variables in a tabular\n","form, using colors to represent the strength and direction of the correlations.\n","It is a valuable tool for exploring relationships between variables and gaining\n","insights into the interdependencies within a dataset.'''"],"metadata":{"id":"B88ir7pFGWWu","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341907731,"user_tz":-330,"elapsed":105,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"6ffed7f3-c252-46d7-93ce-79ba902d5f39"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nA correlation heatmap is a powerful and effective visualization tool that\\ndisplays the correlation coefficients between multiple variables in a tabular\\nform, using colors to represent the strength and direction of the correlations.\\nIt is a valuable tool for exploring relationships between variables and gaining\\ninsights into the interdependencies within a dataset.'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"GwzvFGzlYuh3"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"uyqkiB8YYuh3"}},{"cell_type":"code","source":["'''\n","1- High Correlation Between Closing Price and Other Prices\n","2- Intraday Volatility\n","3- Opening Price and Closing Price'''\n"],"metadata":{"id":"zeJy7U1UGo_U","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341907731,"user_tz":-330,"elapsed":102,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"d0708c6f-dbe6-442c-c3b1-9ee2e107721f"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\n1- High Correlation Between Closing Price and Other Prices\\n2- Intraday Volatility\\n3- Opening Price and Closing Price'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":42}]},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"qYpmQ266Yuh3"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"_WtzZ_hCYuh4"}},{"cell_type":"code","source":["'''\n","The gained insights help creating a positive business impact in following ways-\n","     1- Portfolio Diversification\n","     2- Intraday Trading Strategies\n","     3- Risk Management\n","\n","\n","There are some insights that lead to negative growth, like-\n","    1- High Correlation Among Declining Variables\n","    2- Correlation with Negative External Factors\n","    3- Correlation with Market Index'''"],"metadata":{"id":"g0YXqVOhHM4n","colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"status":"ok","timestamp":1692341907731,"user_tz":-330,"elapsed":99,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"dc9bd2bf-c8c6-4f69-8362-ab4e5140ac1d"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\\nThe gained insights help creating a positive business impact in following ways-\\n     1- Portfolio Diversification\\n     2- Intraday Trading Strategies\\n     3- Risk Management\\n\\n\\nThere are some insights that lead to negative growth, like-\\n    1- High Correlation Among Declining Variables\\n    2- Correlation with Negative External Factors\\n    3- Correlation with Market Index'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":[],"metadata":{"id":"DeSGiGVLL4Qf","executionInfo":{"status":"ok","timestamp":1692341907732,"user_tz":-330,"elapsed":97,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":43,"outputs":[]},{"cell_type":"markdown","source":["#### Chart - 6"],"metadata":{"id":"OH-pJp9IphqM"}},{"cell_type":"code","source":["# Chart - 6 visualization code\n","import datetime\n","from dateutil.relativedelta import relativedelta\n","# Bar Chart\n","plt.figure(figsize=(8, 6))\n","plt.bar(yesbank['Date'], yesbank['Close'])\n","plt.title('Bar Chart of Closing Price')\n","plt.xlabel('Date')\n","plt.ylabel('Closing Price')\n","plt.xticks(rotation=45)\n","plt.grid(True)\n","plt.show()"],"metadata":{"id":"kuRf4wtuphqN","colab":{"base_uri":"https://localhost:8080/","height":529},"executionInfo":{"status":"error","timestamp":1692341907732,"user_tz":-330,"elapsed":96,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"outputId":"3151b3d3-e819-4b34-8b8d-eae02ff61c0b"},"execution_count":44,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3801\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3802\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/_libs/index.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Date'","\nThe above exception was the direct cause of the following exception:\n","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-44-65ca8e6fdacd>\u001b[0m in \u001b[0;36m<cell line: 6>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# Bar Chart\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m8\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m6\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbar\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0myesbank\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Date'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0myesbank\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Close'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Bar Chart of Closing Price'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Date'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3805\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnlevels\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_getitem_multilevel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3807\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3808\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_integer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3809\u001b[0m                 \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key, method, tolerance)\u001b[0m\n\u001b[1;32m   3802\u001b[0m                 \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3803\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3804\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3805\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3806\u001b[0m                 \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Date'"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 0 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"bbFf2-_FphqN"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"loh7H2nzphqN"}},{"cell_type":"code","source":["'''\n"," They are particularly useful for representing categorical data and comparing\n"," discrete values between different categories.'''"],"metadata":{"id":"BTxrQPxxOL8J","executionInfo":{"status":"aborted","timestamp":1692341907734,"user_tz":-330,"elapsed":91,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"_ouA3fa0phqN"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"VECbqPI7phqN"}},{"cell_type":"code","source":["'''\n","1- Comparison of values\n","2- Identifying trends\n","3- Highlitinng outliers\n","4- Categorical analysis'''"],"metadata":{"id":"XGirRNBhOrSj","executionInfo":{"status":"aborted","timestamp":1692341907735,"user_tz":-330,"elapsed":91,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"Seke61FWphqN"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"DW4_bGpfphqN"}},{"cell_type":"code","source":["'''\n","The gained insights help creating a positive business impact oin following ways-\n","    1- Informed decision making\n","    2- Optimizing sratigies\n","    3- Resource allocation\n","    4- Competetive analysis\n","\n","There are some insights that lead to negative growth, like-\n","    1- Declining sales\n","    2- Unfavorable customer feedback\n","    3- Inefficient resource allocation'''"],"metadata":{"id":"l7dhn0uFQKN6","executionInfo":{"status":"aborted","timestamp":1692341907735,"user_tz":-330,"elapsed":90,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Chart - 7"],"metadata":{"id":"PIIx-8_IphqN"}},{"cell_type":"code","source":["# Chart - 7 visualization code\n","\n","# Histogram\n","plt.figure(figsize=(8, 6))\n","plt.hist(yesbank['Close'], bins=30)\n","plt.title('Histogram of Closing Price')\n","plt.xlabel('Closing Price')\n","plt.ylabel('Frequency')\n","plt.grid(True)\n","plt.show()"],"metadata":{"id":"lqAIGUfyphqO","executionInfo":{"status":"aborted","timestamp":1692341907736,"user_tz":-330,"elapsed":91,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"t27r6nlMphqO"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"iv6ro40sphqO"}},{"cell_type":"code","source":["'''\n","They are used to represent the distribution of a dataset, showing the frequency\n","or count of data points falling into different intervals or bins.'''\n"],"metadata":{"id":"ttznRCy4Ibm-","executionInfo":{"status":"aborted","timestamp":1692341907736,"user_tz":-330,"elapsed":90,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"r2jJGEOYphqO"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"Po6ZPi4hphqO"}},{"cell_type":"code","source":["'''\n","1- Data distribution\n","2- Central tendency\n","3- Skewness\n","4- Outliers'''"],"metadata":{"id":"SSgDx0c6JkHW","executionInfo":{"status":"aborted","timestamp":1692341907737,"user_tz":-330,"elapsed":90,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"b0JNsNcRphqO"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"xvSq8iUTphqO"}},{"cell_type":"code","source":["'''\n"," The gained insights help creating a positive business impact in following ways-\n","     1- Pricing strategies\n","     2- Identifying trends\n","     3- Market sentiment analysis\n","\n"," There are some insights that lead to negative growth, like-\n","     1- Neggative skewness\n","     2- Presence of outliers\n","     3- Long tail to the right'''\n"],"metadata":{"id":"oTqjBxTPKAjG","executionInfo":{"status":"aborted","timestamp":1692341907737,"user_tz":-330,"elapsed":90,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Chart - 8"],"metadata":{"id":"BZR9WyysphqO"}},{"cell_type":"code","source":["# Chart - 8 visualization code\n","\n","# Scatter Plot\n","plt.figure(figsize=(8, 6))\n","plt.scatter(yesbank['High'], yesbank['Close'], alpha=0.5)\n","plt.title('Scatter Plot of High vs. Closing Price')\n","plt.xlabel('High')\n","plt.ylabel('Closing Price')\n","plt.grid(True)\n","plt.show()"],"metadata":{"id":"TdPTWpAVphqO","executionInfo":{"status":"aborted","timestamp":1692341907737,"user_tz":-330,"elapsed":89,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"jj7wYXLtphqO"}},{"cell_type":"code","source":["'''\n","\n","Scatter plots are a powerful and widely used data visualization tool that helps\n","to visualize the relationship between two continuous variables. They are\n","particularly useful for exploring and understanding patterns, correlations, and\n","trends in the data.'''"],"metadata":{"id":"Ii65coqritgu","executionInfo":{"status":"aborted","timestamp":1692341907738,"user_tz":-330,"elapsed":89,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"Ob8u6rCTphqO"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"eZrbJ2SmphqO"}},{"cell_type":"code","source":["'''\n","1- Correlation\n","2- Linear relationship\n","3- Outliers\n","'''"],"metadata":{"id":"m6iNHrDxi88D","executionInfo":{"status":"aborted","timestamp":1692341907739,"user_tz":-330,"elapsed":90,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"mZtgC_hjphqO"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"rFu4xreNphqO"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"ey_0qi68phqO"}},{"cell_type":"code","source":["'''\n","The gained insights help creating a positive business impact in following ways-\n","      1- Identifying opportunities\n","      2- Optimizing  Resource Allocation\n","      3- Risk mitigation\n","\n","There are some insights that lead to negative growth, like-\n","      1- Weak or Negative Correlation\n","      2- Inefficient Resource Allocation\n","      3- Market Saturation'''"],"metadata":{"id":"pPT8EL6njVil","executionInfo":{"status":"aborted","timestamp":1692341907739,"user_tz":-330,"elapsed":89,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Chart - 9"],"metadata":{"id":"YJ55k-q6phqO"}},{"cell_type":"code","source":["# Chart - 9 visualization code\n","\n","# Pie Chart\n","labels = ['Up', 'Down']\n","sizes = [yesbank[yesbank['Close'] >= yesbank['Close'].shift(1)].shape[0], yesbank[yesbank['Close'] < yesbank['Close'].shift(1)].shape[0]]\n","plt.pie(sizes, labels=labels, autopct='%1.1f%%')\n","plt.title('Pie Chart of Up and Down Days')\n","plt.show()"],"metadata":{"id":"B2aS4O1ophqO","executionInfo":{"status":"aborted","timestamp":1692341907740,"user_tz":-330,"elapsed":90,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"gCFgpxoyphqP"}},{"cell_type":"code","source":["'''\n","Pie charts are used to represent data as slices of a circle, where each slice\n","represents a proportion or percentage of a whole. They are best suited for\n","visualizing data with categorical variables and are particularly useful when\n","comparing the parts of a whole.'''"],"metadata":{"id":"Zh3bryB2kH2F","executionInfo":{"status":"aborted","timestamp":1692341907741,"user_tz":-330,"elapsed":90,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"TVxDimi2phqP"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"OVtJsKN_phqQ"}},{"cell_type":"code","source":["'''\n","1- Proportion of each category\n","2- Relative Importance\n","3- Dominant category\n","'''"],"metadata":{"id":"ktkdIpZgkphW","executionInfo":{"status":"aborted","timestamp":1692341907743,"user_tz":-330,"elapsed":58261,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"ngGi97qjphqQ"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"lssrdh5qphqQ"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"tBpY5ekJphqQ"}},{"cell_type":"code","source":["'''\n","The gained insights help creating a positive business impact in following ways-\n","      1- Resource allocation\n","      2- Product and Service Optimization\n","      3- Marketing and Sales Strategies\n","\n","There are some insights that lead to negative growth, like-\n","      1- Overdependence on a Single Category\n","      2- Neglected Categories\n","      3- Unprofitable Categories'''"],"metadata":{"id":"tkQdJvl7lbsn","executionInfo":{"status":"aborted","timestamp":1692341907744,"user_tz":-330,"elapsed":58261,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Chart - 10"],"metadata":{"id":"U2RJ9gkRphqQ"}},{"cell_type":"code","source":["# Chart - 10 visualization code\n","\n","# Box Plot\n","plt.figure(figsize=(8, 6))\n","sns.boxplot(yesbank['Close'])\n","plt.title('Box Plot of Closing Price')\n","plt.show()"],"metadata":{"id":"GM7a4YP4phqQ","executionInfo":{"status":"ok","timestamp":1692341928143,"user_tz":-330,"elapsed":844,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"colab":{"base_uri":"https://localhost:8080/","height":545},"outputId":"768756c5-4e78-4e9d-f244-332609c341ea"},"execution_count":45,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"1M8mcRywphqQ"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"8agQvks0phqQ"}},{"cell_type":"code","source":["'''\n","Box plots, also known as box-and-whisker plots, are used to visualize the\n","distribution of numerical data and display key statistical measures. They are\n","particularly useful for summarizing data and identifying potential outliers,\n","variability, and skewness in the data.'''"],"metadata":{"id":"0JFOLUSymUPC","executionInfo":{"status":"aborted","timestamp":1692341907745,"user_tz":-330,"elapsed":58259,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"tgIPom80phqQ"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"Qp13pnNzphqQ"}},{"cell_type":"code","source":["'''\n","1- Central tendency\n","2- Variability\n","3- Outliers\n","4- Skewness'''"],"metadata":{"id":"yMp5-qt5mn-n","executionInfo":{"status":"aborted","timestamp":1692341907746,"user_tz":-330,"elapsed":58259,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"JMzcOPDDphqR"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"R4Ka1PC2phqR"}},{"cell_type":"code","source":["'''\n","The gained insights help creating a positive business impact in following ways-\n","      1- Data-Driven Decision Making\n","      2- Resource Allocation\n","      3- Outlier Detection and Managemen\n","\n","There are some insights that lead to negative growth, like-\n","      1- High Variability\n","      2- Persistent Outliers\n","      3- Skewed Data\n","      4- Lack of Central Tendency'''"],"metadata":{"id":"p-R-8zpum3WF","executionInfo":{"status":"aborted","timestamp":1692341907746,"user_tz":-330,"elapsed":58258,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Chart - 11"],"metadata":{"id":"x-EpHcCOp1ci"}},{"cell_type":"code","source":["# Chart - 11 visualization code\n","\n","# Violin Plot\n","plt.figure(figsize=(8, 6))\n","sns.violinplot(yesbank['Close'])\n","plt.title('Violin Plot of Closing Price')\n","plt.show()"],"metadata":{"id":"mAQTIvtqp1cj","executionInfo":{"status":"aborted","timestamp":1692341907747,"user_tz":-330,"elapsed":58257,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"X_VqEhTip1ck"}},{"cell_type":"code","source":["'''\n","Violin plots are used to visualize the distribution of numerical data and\n","display important statistical information in a more comprehensive manner\n","compared to traditional box plots. They are particularly useful for comparing\n","the distribution of multiple groups or categories and provide insights into the\n","data's density and shape.'''"],"metadata":{"id":"RLMakM55ple2","executionInfo":{"status":"aborted","timestamp":1692341907747,"user_tz":-330,"elapsed":58256,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"-vsMzt_np1ck"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"8zGJKyg5p1ck"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"ZYdMsrqVp1ck"}},{"cell_type":"code","source":["'''\n","1- Data Distribution Comparison\n","2- Skewness and Symmetry\n","3- Density Estimation\n","4- Bimodal or Multimodal Distributions'''"],"metadata":{"id":"NmuUYyBYpy3t","executionInfo":{"status":"aborted","timestamp":1692341907748,"user_tz":-330,"elapsed":58255,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"PVzmfK_Ep1ck"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"druuKYZpp1ck"}},{"cell_type":"code","source":["'''\n","The gained insights help creating a positive business impact in following ways-\n","       1- Market Segmentation\n","       2- Product and Service Optimization\n","       3- Competitive Analysis\n","\n","There are some insights that lead to negative growth, like-\n","       1- Bimodal or Multimodal Data\n","       2- Negative Performance Trends\n","       3- Market Shifts and Competitive Challenges'''"],"metadata":{"id":"l6bKtd8RqF2r","executionInfo":{"status":"aborted","timestamp":1692341907748,"user_tz":-330,"elapsed":58254,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Chart - 12"],"metadata":{"id":"n3dbpmDWp1ck"}},{"cell_type":"code","source":["# Chart - 12 visualization code\n","\n","# 3D Scatter Plot\n","fig = plt.figure(figsize=(10, 8))\n","ax = fig.add_subplot(111, projection='3d')\n","ax.scatter(yesbank['Open'], yesbank['High'], yesbank['Low'])\n","ax.set_xlabel('Open')\n","ax.set_ylabel('High')\n","ax.set_zlabel('Low')\n","plt.title('3D Scatter Plot of Open, High, and Low Prices')\n","plt.show()"],"metadata":{"id":"bwevp1tKp1ck","executionInfo":{"status":"aborted","timestamp":1692341907748,"user_tz":-330,"elapsed":58253,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"ylSl6qgtp1ck"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"m2xqNkiQp1ck"}},{"cell_type":"code","source":["'''\n","3D scatter plots are used to visualize the relationships between three numerical\n","variables simultaneously. They provide a three-dimensional representation of\n","data points in a Cartesian coordinate system, where each axis represents one\n","variable.'''"],"metadata":{"id":"JjH1nVIqrnKz","executionInfo":{"status":"aborted","timestamp":1692341907749,"user_tz":-330,"elapsed":58252,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"ZWILFDl5p1ck"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"x-lUsV2mp1ck"}},{"cell_type":"code","source":["'''\n","1- Multivariate Relationships\n","2- Correlation Strength and Direction\n","3- Data Clustering and Patterns\n","4- Outlier Detection'''"],"metadata":{"id":"EK5wQW9MtfJW","executionInfo":{"status":"aborted","timestamp":1692341907749,"user_tz":-330,"elapsed":58251,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"M7G43BXep1ck"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"5wwDJXsLp1cl"}},{"cell_type":"code","source":["'''\n","The gained insights help creating a positive business impact in following ways-\n","         1- Enhanced Product and Service Offerings\n","         2- Improved Customer Experience\n","         3- Data-Driven Decision Making\n","\n","There are some insights that lead to negative growth, like-\n","        1- Overlapping Clusters\n","        2- Outliers with Adverse Impact\n","        3- Unfavorable Correlations'''"],"metadata":{"id":"WjdQ-cWptyrK","executionInfo":{"status":"aborted","timestamp":1692341907750,"user_tz":-330,"elapsed":58251,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Chart - 13"],"metadata":{"id":"Ag9LCva-p1cl"}},{"cell_type":"code","source":["# Chart - 13 visualization code"],"metadata":{"id":"EUfxeq9-p1cl","executionInfo":{"status":"aborted","timestamp":1692341908692,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"E6MkPsBcp1cl"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"V22bRsFWp1cl"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"2cELzS2fp1cl"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"ozQPc2_Ip1cl"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"3MPXvC8up1cl"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"GL8l1tdLp1cl"}},{"cell_type":"markdown","source":["#### Chart - 14 - Correlation Heatmap"],"metadata":{"id":"NC_X3p0fY2L0"}},{"cell_type":"code","source":["# Correlation Heatmap visualization code\n","\n","plt.figure(figsize=(6, 4))\n","sns.heatmap(yesbank[['Open', 'High', 'Low', 'Close']].corr(), annot=True, cmap='coolwarm', center=0)\n","plt.title('Correlation Heatmap of Open, High, Low, and Closing Prices')\n","plt.show()"],"metadata":{"id":"xyC9zolEZNRQ","executionInfo":{"status":"aborted","timestamp":1692341908692,"user_tz":-330,"elapsed":35,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"UV0SzAkaZNRQ"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"DVPuT8LYZNRQ"}},{"cell_type":"code","source":["'''\n","A correlation heatmap is a powerful and effective visualization tool that\n","displays the correlation coefficients between multiple variables in a tabular\n","form, using colors to represent the strength and direction of the correlations.\n","It is a valuable tool for exploring relationships between variables and gaining\n","insights into the interdependencies within a dataset.'''"],"metadata":{"id":"HCUQXyTttKxf","executionInfo":{"status":"aborted","timestamp":1692341908692,"user_tz":-330,"elapsed":35,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"YPEH6qLeZNRQ"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"bfSqtnDqZNRR"}},{"cell_type":"code","source":["'''\n","1- High Correlation Between Closing Price and Other Prices\n","2- Intraday Volatility\n","3- Opening Price and Closing Price'''\n"],"metadata":{"id":"IU0sOypwtRdU","executionInfo":{"status":"aborted","timestamp":1692341908693,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Chart - 15 - Pair Plot"],"metadata":{"id":"q29F0dvdveiT"}},{"cell_type":"code","source":["# Pair Plot visualization code\n","\n","# Pair Plot of High, Low, Open, Close Prices\n","sns.pairplot(yesbank[['High', 'Low', 'Open', 'Close']], diag_kind='kde', markers='o', palette='Blues')\n","plt.suptitle('Pair Plot of High, Low, Open, Close Prices', y=1)\n","plt.show()"],"metadata":{"id":"o58-TEIhveiU","executionInfo":{"status":"aborted","timestamp":1692341908693,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"EXh0U9oCveiU"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"eMmPjTByveiU"}},{"cell_type":"code","source":["'''\n","Using a pair plot of high, low, open, and close prices can be beneficial for\n","gaining insights into the relationships and correlations between these variables.\n","A pair plot allows us to visualize the scatterplots between all combinations of\n","two variables, providing a comprehensive view of their interactions.'''"],"metadata":{"id":"QVfjW8U_s0dM","executionInfo":{"status":"aborted","timestamp":1692341908693,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"22aHeOlLveiV"}},{"cell_type":"markdown","source":["Answer Here"],"metadata":{"id":"uPQ8RGwHveiV"}},{"cell_type":"code","source":["'''\n","1- Correlation analysis\n","2- Price trends\n","3- Identification of oiutliers'''"],"metadata":{"id":"qT9Uuuqys2tN","executionInfo":{"status":"aborted","timestamp":1692341908693,"user_tz":-330,"elapsed":35,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## ***5. Hypothesis Testing***"],"metadata":{"id":"g-ATYxFrGrvw"}},{"cell_type":"markdown","source":["### Based on your chart experiments, define three hypothetical statements from the dataset. In the next three questions, perform hypothesis testing to obtain final conclusion about the statements through your code and statistical testing."],"metadata":{"id":"Yfr_Vlr8HBkt"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"-7MS06SUHkB-"}},{"cell_type":"code","source":["'''\n","Statement 1- Hypothetically, the 'Up' category in the pie chart represents\n","54.9% of the total days, while the 'Down' category represents 45.1% of the total\n","days. This suggests that, based on the 'Close' values, there are slightly more\n","days with a positive price movement ('Up') compared to days with a negative\n","price movement ('Down') in the dataset.\n","\n","Statement 2- Hypothetically, there appears to be a positive linear relationship\n","between the 'High' prices and the 'Closing Prices' of Yes Bank stock. As the\n","'High' prices increase, the 'Closing Prices' also tend to increase, indicating a\n","potential positive correlation between these two variables.\n","\n","Satement 3- Hypothetically, the histogram of 'Closing Price' suggests that\n","there is a concentration of data points at the minimum 'Closing Price' value.\n","This concentration results in a peak in the histogram, indicating a higher\n","frequency of occurrence at the minimum price level.'''"],"metadata":{"id":"8ncFNipBwhbm","executionInfo":{"status":"aborted","timestamp":1692341908694,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Hypothetical Statement - 1"],"metadata":{"id":"8yEUt7NnHlrM"}},{"cell_type":"markdown","source":["#### 1. State Your research hypothesis as a null hypothesis and alternate hypothesis."],"metadata":{"id":"tEA2Xm5dHt1r"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"HI9ZP0laH0D-"}},{"cell_type":"code","source":["'''\n","In the context of the pie chart, the null hypothesis assumes that there is an\n","equal chance of a day having a positive or negative price movement. The\n","alternate hypothesis suggests that there is a difference in the proportions,\n","meaning that one type of price movement is more prevalent than the other.\n","Statistical tests can be conducted to evaluate whether the observed proportions\n","in the pie chart are significantly different from what would be expected under\n","the null hypothesis.'''"],"metadata":{"id":"fL0kP4lLyLu7","executionInfo":{"status":"aborted","timestamp":1692341908694,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2. Perform an appropriate statistical test."],"metadata":{"id":"I79__PHVH19G"}},{"cell_type":"code","source":["# Perform Statistical Test to obtain P-Value\n","\n","import statsmodels.api as sm\n","\n","# Counts of days with \"Up\" and \"Down\" price movements\n","up_days = yesbank[yesbank['Close'] >= yesbank['Close'].shift(1)].shape[0]\n","down_days = yesbank[yesbank['Close'] < yesbank['Close'].shift(1)].shape[0]\n","\n","# Total number of days\n","total_days = up_days + down_days\n","\n","# Proportions of \"Up\" and \"Down\" days\n","p_up = up_days / total_days\n","p_down = down_days / total_days\n","\n","# Assuming H0: p_up - p_down = 0 (No difference between proportions)\n","# Performing two-proportion z-test\n","z_stat, p_value = sm.stats.proportions_ztest([up_days, down_days], [total_days, total_days], alternative='two-sided')\n","\n","print(\"Z-statistic:\", z_stat)\n","print(\"P-value:\", p_value)"],"metadata":{"id":"oZrfquKtyian","executionInfo":{"status":"aborted","timestamp":1692341908694,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which statistical test have you done to obtain P-Value?"],"metadata":{"id":"Ou-I18pAyIpj"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"s2U0kk00ygSB"}},{"cell_type":"code","source":["#Two-proportion z-test"],"metadata":{"id":"3_DWj2jlzQ38","executionInfo":{"status":"aborted","timestamp":1692341908694,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Why did you choose the specific statistical test?"],"metadata":{"id":"fF3858GYyt-u"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"HO4K0gP5y3B4"}},{"cell_type":"code","source":["'''\n","Because the two-proportion z-test compares the proportions of two independent\n","groups to determine if they are significantly different from each other. In our\n","case, the two groups are the number of days with \"Up\" price movements and the\n","number of days with \"Down\" price movements.'''"],"metadata":{"id":"FaKX6kVEzX93","executionInfo":{"status":"aborted","timestamp":1692341908695,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Hypothetical Statement - 2"],"metadata":{"id":"4_0_7-oCpUZd"}},{"cell_type":"markdown","source":["#### 1. State Your research hypothesis as a null hypothesis and alternate hypothesis."],"metadata":{"id":"hwyV_J3ipUZe"}},{"cell_type":"code","source":["'''\n","In the context of the scatter plot, the null hypothesis assumes that the points\n","are randomly scattered around with no consistent pattern, and the correlation\n","between \"High\" and \"Closing Price\" is not different from zero. The alternate\n","hypothesis suggests that the points show a clear upward trend, and the\n","correlation between \"High\" and \"Closing Price\" is positive and significantly\n","different from zero.\n","To formally test these hypotheses, you can calculate the correlation coefficient\n","(e.g., Pearson's correlation) and perform a hypothesis test to assess whether\n","the observed correlation is significantly different from zero. If the p-value\n","obtained from the test is smaller than the chosen significance level\n","(e.g., 0.05), you would reject the null hypothesis in favor of the alternate\n","hypothesis, indicating a significant positive linear relationship between\n","\"High\" and \"Closing Price.\" Conversely, if the p-value is greater than the\n","significance level, you would fail to reject the null hypothesis, suggesting no\n","significant linear relationship between the two variables.'''"],"metadata":{"id":"rCMqGTZU099e","executionInfo":{"status":"aborted","timestamp":1692341908695,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2. Perform an appropriate statistical test."],"metadata":{"id":"3yB-zSqbpUZe"}},{"cell_type":"code","source":["# Perform Statistical Test to obtain P-Value\n","\n","import scipy.stats as stats\n","\n","# Extract the 'High' and 'Closing Price' columns from the dataset\n","high_prices = yesbank['High']\n","closing_prices = yesbank['Close']\n","\n","# Calculate the Pearson correlation coefficient and p-value\n","correlation_coefficient, p_value = stats.pearsonr(high_prices, closing_prices)\n","\n","print(\"Pearson Correlation Coefficient:\", correlation_coefficient)\n","print(\"P-value:\", p_value)"],"metadata":{"id":"sWxdNTXNpUZe","executionInfo":{"status":"aborted","timestamp":1692341908695,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which statistical test have you done to obtain P-Value?"],"metadata":{"id":"dEUvejAfpUZe"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"oLDrPz7HpUZf"}},{"cell_type":"code","source":["#Pearson correlation test"],"metadata":{"id":"gANdormq19ag","executionInfo":{"status":"aborted","timestamp":1692341908696,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Why did you choose the specific statistical test?"],"metadata":{"id":"Fd15vwWVpUZf"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"4xOGYyiBpUZf"}},{"cell_type":"code","source":["'''\n","By conducting the Pearson correlation test, we can determine whether the\n","observed correlation is statistically significant or if it could have occurred\n","by chance. If the p-value is small (less than the chosen significance level,\n","e.g., 0.05), it provides evidence to reject the null hypothesis, suggesting a\n","significant linear relationship. Conversely, if the p-value is large, it\n","supports the idea that there is no significant linear relationship between the\n","two variable'''"],"metadata":{"id":"o2D7icif2NYx","executionInfo":{"status":"aborted","timestamp":1692341908696,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Hypothetical Statement - 3"],"metadata":{"id":"bn_IUdTipZyH"}},{"cell_type":"markdown","source":["#### 1. State Your research hypothesis as a null hypothesis and alternate hypothesis."],"metadata":{"id":"49K5P_iCpZyH"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"7gWI5rT9pZyH"}},{"cell_type":"code","source":["'''\n","Null Hypothesis (H0): The frequency distribution of \"Closing Price\" in the\n","dataset is homogeneous, and there is no concentration of data points at the\n","minimum \"Closing Price\" value.\n","\n","Alternate Hypothesis (H1): The frequency distribution of \"Closing Price\" in the\n","dataset is not homogeneous, and there is a concentration of data points at the\n","minimum \"Closing Price\" value, resulting in a peak in the histogram.\n","\n","In statistical hypothesis testing, the null hypothesis (H0) assumes that there\n","is no effect, no difference, or no relationship between the variables being\n","studied. The alternate hypothesis (H1) suggests that there is a significant\n","effect, difference, or relationship.\n","\n","In the context of the histogram, the null hypothesis assumes that the \"Closing\n","Price\" data is uniformly distributed or evenly spread, resulting in a flat\n","histogram without any particular concentration of values. The alternate\n","hypothesis suggests that the \"Closing Price\" data is not uniformly distributed,\n","and there is a notable peak in the histogram, indicating a higher frequency of\n","occurrences at the minimum \"Closing Price\" value.'''"],"metadata":{"id":"bRwWEiko5L3e","executionInfo":{"status":"aborted","timestamp":1692341908696,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2. Perform an appropriate statistical test."],"metadata":{"id":"Nff-vKELpZyI"}},{"cell_type":"code","source":["# Perform Statistical Test to obtain P-Value\n","\n","import scipy.stats as stats\n","\n","# Extract the 'Closing Price' data from the dataset\n","closing_prices = yesbank['Close']\n","\n","# Perform the Kolmogorov-Smirnov test for normality\n","kstest_stat, p_value = stats.kstest(closing_prices, 'norm')\n","\n","print(\"Kolmogorov-Smirnov Test Statistic:\", kstest_stat)\n","print(\"P-value:\", p_value)"],"metadata":{"id":"s6AnJQjtpZyI","executionInfo":{"status":"aborted","timestamp":1692341908696,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which statistical test have you done to obtain P-Value?"],"metadata":{"id":"kLW572S8pZyI"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"ytWJ8v15pZyI"}},{"cell_type":"code","source":["#Kolmogorov-Smirnov Test"],"metadata":{"id":"ObKQo5A958CR","executionInfo":{"status":"aborted","timestamp":1692341908697,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Why did you choose the specific statistical test?"],"metadata":{"id":"dWbDXHzopZyI"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"M99G98V6pZyI"}},{"cell_type":"code","source":["'''\n","Beacuse for analyzing the distribution of continuous data, such as \"Closing\n","Price,\" the most suitable test is the Kolmogorov-Smirnov test or the\n","Shapiro-Wilk test for testing normality.'''"],"metadata":{"id":"fw4Ra95r6BTS","executionInfo":{"status":"aborted","timestamp":1692341908697,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## ***6. Feature Engineering & Data Pre-processing***"],"metadata":{"id":"yLjJCtPM0KBk"}},{"cell_type":"markdown","source":["### 1. Handling Missing Values"],"metadata":{"id":"xiyOF9F70UgQ"}},{"cell_type":"code","source":["# Handling Missing Values & Missing Value Imputation\n","\n","\n","# Handling Missing Values\n","missing_values_count = yesbank.isnull().sum()\n","print(\"Missing values count in each column:\")\n","print(missing_values_count)\n","\n","\n","\n","# Missing Value Imputation\n","# Impute missing values in the 'Close' column using mean imputation\n","mean_close = yesbank['Close'].mean()\n","yesbank['Close'].fillna(mean_close, inplace=True)\n","\n","# Verify if missing values have been imputed\n","print(\"\\nMissing Values After Imputation:\")\n","print(yesbank.isnull().sum())\n"],"metadata":{"id":"iRsAHk1K0fpS","executionInfo":{"status":"aborted","timestamp":1692341908697,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### What all missing value imputation techniques have you used and why did you use those techniques?"],"metadata":{"id":"7wuGOrhz0itI"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"1ixusLtI0pqI"}},{"cell_type":"code","source":["'''\n","I have used mean imputation technique.\n","Because -\n","    1- Mean imputation fills the missing values with the mean of the available\n","       data in the column.\n","    2- This method is suitable for numerical data and is easy to implement.\n","    3- Mean imputation works well when the data is missing at random and the\n","       distribution of the data is approximately normal.'''"],"metadata":{"id":"POv0me_I-cEY","executionInfo":{"status":"aborted","timestamp":1692341908698,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2. Handling Outliers"],"metadata":{"id":"id1riN9m0vUs"}},{"cell_type":"code","source":["# Handling Outliers & Outlier treatments\n","\n","# Handling Outliers\n","# Calculate the Z-scores for 'Close' column\n","z_scores = (yesbank['Close'] - yesbank['Close'].mean()) / yesbank['Close'].std()\n","\n","# Define a Z-score threshold to identify outliers\n","z_score_threshold = 3\n","\n","# Detect outliers by filtering rows with Z-scores greater than the threshold\n","outliers = yesbank[abs(z_scores) > z_score_threshold]\n","\n","\n","\n","#Outlier treatment\n","# you can remove the outliers from the DataFrame or cap them to a specific value\n","# For example, to remove outliers:\n","yesbank = yesbank[abs(z_scores) <= z_score_threshold]\n","\n","# To cap outliers at a specific value (e.g., at the mean of the 'Close' column):\n","mean_close = yesbank['Close'].mean()\n","yesbank['Close'] = yesbank['Close'].apply(lambda x: mean_close if abs((x - mean_close) / yesbank['Close'].std()) > z_score_threshold else x)\n","yesbank\n","\n","\n","\n","\n","\n"],"metadata":{"id":"M6w2CzZf04JK","executionInfo":{"status":"aborted","timestamp":1692341908698,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### What all outlier treatment techniques have you used and why did you use those techniques?"],"metadata":{"id":"578E2V7j08f6"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"uGZz5OrT1HH-"}},{"cell_type":"code","source":["'''\n","we use 2 outlier treatment techniques-\n","      1- Remove outlier: Removing outliers can make the data more manageable and\n","         easier to interpret.\n","\n","      2- Capping outliers: Instead of removing or replacing the outliers,\n","         capping sets a predefined upper or lower bound on the extreme values to\n","         limit their impact on the analysis while retaining their presence in\n","         the data.'''"],"metadata":{"id":"Uv1i8WyzBZnw","executionInfo":{"status":"aborted","timestamp":1692341908698,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 3. Categorical Encoding"],"metadata":{"id":"89xtkJwZ18nB"}},{"cell_type":"code","source":["# Encode your categorical columns\n","\n","\n","# Check the data types of each column\n","data_types = yesbank.dtypes\n","\n","# Filter columns with data type 'object' (potential categorical columns)\n","categorical_columns = data_types[data_types == 'object'].index.tolist()\n","\n","if not categorical_columns:\n","    print(\"No categorical columns found.\")\n","else:\n","    print(\"Categorical columns:\")\n","    print(categorical_columns)\n"],"metadata":{"id":"21JmIYMG2hEo","executionInfo":{"status":"aborted","timestamp":1692341908698,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### What all categorical encoding techniques have you used & why did you use those techniques?"],"metadata":{"id":"67NQN5KX2AMe"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"UDaue5h32n_G"}},{"cell_type":"markdown","source":["### 4. Textual Data Preprocessing\n","(It's mandatory for textual dataset i.e., NLP, Sentiment Analysis, Text Clustering etc.)"],"metadata":{"id":"Iwf50b-R2tYG"}},{"cell_type":"code","source":["data_types = yesbank.dtypes\n","textual_columns = data_types[data_types == 'object'].index.tolist()\n","textual_columns"],"metadata":{"id":"EJkCqbvEPHvx","executionInfo":{"status":"aborted","timestamp":1692341908698,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 1. Expand Contraction"],"metadata":{"id":"GMQiZwjn3iu7"}},{"cell_type":"code","source":["# Expand Contraction"],"metadata":{"id":"PTouz10C3oNN","executionInfo":{"status":"aborted","timestamp":1692341908699,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2. Lower Casing"],"metadata":{"id":"WVIkgGqN3qsr"}},{"cell_type":"code","source":["# Lower Casing"],"metadata":{"id":"88JnJ1jN3w7j","executionInfo":{"status":"aborted","timestamp":1692341908699,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 3. Removing Punctuations"],"metadata":{"id":"XkPnILGE3zoT"}},{"cell_type":"code","source":["# Remove Punctuations"],"metadata":{"id":"vqbBqNaA33c0","executionInfo":{"status":"aborted","timestamp":1692341908699,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 4. Removing URLs & Removing words and digits contain digits."],"metadata":{"id":"Hlsf0x5436Go"}},{"cell_type":"code","source":["# Remove URLs & Remove words and digits contain digits"],"metadata":{"id":"2sxKgKxu4Ip3","executionInfo":{"status":"aborted","timestamp":1692341908699,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 5. Removing Stopwords & Removing White spaces"],"metadata":{"id":"mT9DMSJo4nBL"}},{"cell_type":"code","source":["# Remove Stopwords"],"metadata":{"id":"T2LSJh154s8W","executionInfo":{"status":"aborted","timestamp":1692341908700,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Remove White spaces"],"metadata":{"id":"EgLJGffy4vm0","executionInfo":{"status":"aborted","timestamp":1692341908700,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 6. Rephrase Text"],"metadata":{"id":"c49ITxTc407N"}},{"cell_type":"code","source":["# Rephrase Text"],"metadata":{"id":"foqY80Qu48N2","executionInfo":{"status":"aborted","timestamp":1692341908700,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 7. Tokenization"],"metadata":{"id":"OeJFEK0N496M"}},{"cell_type":"code","source":["# Tokenization"],"metadata":{"id":"ijx1rUOS5CUU","executionInfo":{"status":"aborted","timestamp":1692341908700,"user_tz":-330,"elapsed":35,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 8. Text Normalization"],"metadata":{"id":"9ExmJH0g5HBk"}},{"cell_type":"code","source":["# Normalizing Text (i.e., Stemming, Lemmatization etc.)"],"metadata":{"id":"AIJ1a-Zc5PY8","executionInfo":{"status":"aborted","timestamp":1692341908701,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which text normalization technique have you used and why?"],"metadata":{"id":"cJNqERVU536h"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"Z9jKVxE06BC1"}},{"cell_type":"markdown","source":["#### 9. Part of speech tagging"],"metadata":{"id":"k5UmGsbsOxih"}},{"cell_type":"code","source":["# POS Taging"],"metadata":{"id":"btT3ZJBAO6Ik","executionInfo":{"status":"aborted","timestamp":1692341908701,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 10. Text Vectorization"],"metadata":{"id":"T0VqWOYE6DLQ"}},{"cell_type":"code","source":["# Vectorizing Text"],"metadata":{"id":"yBRtdhth6JDE","executionInfo":{"status":"aborted","timestamp":1692341908701,"user_tz":-330,"elapsed":35,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which text vectorization technique have you used and why?"],"metadata":{"id":"qBMux9mC6MCf"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"su2EnbCh6UKQ"}},{"cell_type":"code","source":[],"metadata":{"id":"nhp9sJtiWNmq","executionInfo":{"status":"aborted","timestamp":1692341908701,"user_tz":-330,"elapsed":35,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 4. Feature Manipulation & Selection"],"metadata":{"id":"-oLEiFgy-5Pf"}},{"cell_type":"markdown","source":["#### 1. Feature Manipulation"],"metadata":{"id":"C74aWNz2AliB"}},{"cell_type":"code","source":["\n","yesbank_copy = yesbank.copy()\n","yesbank_copy"],"metadata":{"id":"ByqsveNJWStg","executionInfo":{"status":"aborted","timestamp":1692341908702,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Manipulate Features to minimize feature correlation and create new features\n","\n","\n","\n","\n","# Step 1: Identify Correlation\n","correlation_matrix = yesbank_copy.corr()\n","\n","# Step 2: Minimize Feature Correlation\n","# you can remove one of the highly correlated features with a correlation threshold of 0.9\n","high_correlation_threshold = 0.9\n","correlated_features = set()\n","for i in range(len(correlation_matrix.columns)):\n","    for j in range(i):\n","        if abs(correlation_matrix.iloc[i, j]) > high_correlation_threshold:\n","            colname = correlation_matrix.columns[i]\n","            correlated_features.add(colname)\n","yesbank.drop(columns=correlated_features, inplace=True)\n","\n","# Creating new feature: 7-day Moving Average of Closing Price\n","yesbank_copy['MA_7'] = yesbank_copy['Open'].rolling(window=7).mean()\n","\n","# Creating new feature: 30-day Moving Average of Opening Price\n","yesbank_copy['MA_30'] = yesbank_copy['Open'].rolling(window=30).mean()\n","\n","# Drop rows with missing values resulting from moving averages\n","yesbank_copy.dropna(inplace=True)\n","\n","# Print the modified DataFrame\n","print(yesbank_copy.head())\n","print(yesbank)"],"metadata":{"id":"h1qC4yhBApWC","executionInfo":{"status":"aborted","timestamp":1692341908702,"user_tz":-330,"elapsed":35,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2. Feature Selection"],"metadata":{"id":"2DejudWSA-a0"}},{"cell_type":"code","source":["# Select your features wisely to avoid overfitting\n","\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.feature_selection import SelectKBest, f_regression\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import mean_squared_error\n","\n","\n","\n","# Separate the target variable 'Close' from the features\n","X = yesbank_copy.drop(columns=['Close'])\n","y = yesbank_copy['Close']\n","\n","# Split the data into training and testing sets\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Feature Selection using SelectKBest and F-test (Univariate Feature Selection)\n","selector = SelectKBest(score_func=f_regression, k='all')\n","X_train_selected = selector.fit_transform(X_train, y_train)\n","X_test_selected = selector.transform(X_test)\n","selected_features = X_train.columns[selector.get_support()]\n","\n","print(f\"Selected {len(selected_features)} best features: {selected_features}\")\n","\n","# Train a model using the selected features (e.g., Linear Regression)\n","model = LinearRegression()\n","model.fit(X_train_selected, y_train)\n","\n","# Make predictions on the test set\n","y_pred = model.predict(X_test_selected)\n","\n","# Evaluate the model using Mean Squared Error\n","mse = mean_squared_error(y_test, y_pred)\n","print(f\"Mean Squared Error: {mse}\")"],"metadata":{"id":"YLhe8UmaBCEE","executionInfo":{"status":"aborted","timestamp":1692341908702,"user_tz":-330,"elapsed":35,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### What all feature selection methods have you used  and why?"],"metadata":{"id":"pEMng2IbBLp7"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"rb2Lh6Z8BgGs"}},{"cell_type":"code","source":["#Univariate Feature Selection\n","'''\n","Because Univariate feature selection methods evaluate each feature independently\n","with the target variable (in this case, the 'Close' price). The goal is to\n","select the top k features that have the strongest relationship with the target\n","variable while ignoring the relationships among the features themselves.'''"],"metadata":{"id":"8JNtk_AwYGX0","executionInfo":{"status":"aborted","timestamp":1692341908703,"user_tz":-330,"elapsed":36,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which all features you found important and why?"],"metadata":{"id":"rAdphbQ9Bhjc"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"fGgaEstsBnaf"}},{"cell_type":"code","source":["'''\n","1- Feature Relevance: Features that have a high correlation or strong\n","   relationship with the target variable are usually more important. Look for\n","   features that have a significant impact on the target variable and are\n","   relevant to the problem you are trying to solve.\n","\n","2- Feature Importance Scores: Some machine learning algorithms, like tree-based\n","   models (e.g., Decision Trees, Random Forest, Gradient Boosting), provide\n","   feature importance scores. These scores indicate the relative importance of\n","   each feature in making predictions. Higher importance scores suggest more\n","   important features.\n","\n","3- Feature Selection Techniques: Use feature selection techniques like\n","   Univariate Feature Selection (e.g., SelectKBest with F-test), Recursive\n","   eature Elimination (RFE), or L1-based regularization (Lasso) to select the\n","   most relevant features and discard less informative ones.'''"],"metadata":{"id":"YkOT__7KYNzF","executionInfo":{"status":"aborted","timestamp":1692341908704,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 5. Data Transformation"],"metadata":{"id":"TNVZ9zx19K6k"}},{"cell_type":"markdown","source":["#### Do you think that your data needs to be transformed? If yes, which transformation have you used. Explain Why?"],"metadata":{"id":"nqoHp30x9hH9"}},{"cell_type":"code","source":["# Transform Your data"],"metadata":{"id":"I6quWQ1T9rtH","executionInfo":{"status":"aborted","timestamp":1692341908705,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 6. Data Scaling"],"metadata":{"id":"rMDnDkt2B6du"}},{"cell_type":"code","source":["# Scaling your data\n","\n","from sklearn.preprocessing import StandardScaler\n","\n","# Create the StandardScaler object\n","scaler = StandardScaler()\n","\n","# Scale the feature data (X)\n","X_scaled = scaler.fit_transform(X)\n","\n","# Convert the scaled data back to a DataFrame\n","X_scaled_df = pd.DataFrame(X_scaled, columns=X.columns)\n","\n","# Combine the scaled features (X_scaled_df) with the target variable (y) into a single DataFrame\n","scaled_df = pd.concat([X_scaled_df, y], axis=1)\n","\n","# Display the scaled DataFrame\n","print(scaled_df.head())"],"metadata":{"id":"dL9LWpySC6x_","executionInfo":{"status":"aborted","timestamp":1692341908705,"user_tz":-330,"elapsed":37,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which method have you used to scale you data and why?"],"metadata":{"id":"yiiVWRdJDDil"}},{"cell_type":"code","source":["#Standardization method\n","'''\n","(The Standardization method, also known as z-score scaling). Because it is used\n","to scale the data to have a mean of 0 and a standard deviation of 1.\n","This scaling technique is applied to each feature individually, independently of\n","other features.'''"],"metadata":{"id":"M5THp_8ba3oB","executionInfo":{"status":"aborted","timestamp":1692341908706,"user_tz":-330,"elapsed":38,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 7. Dimesionality Reduction"],"metadata":{"id":"1UUpS68QDMuG"}},{"cell_type":"markdown","source":["##### Do you think that dimensionality reduction is needed? Explain Why?"],"metadata":{"id":"kexQrXU-DjzY"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"GGRlBsSGDtTQ"}},{"cell_type":"code","source":["# DImensionality Reduction (If needed)"],"metadata":{"id":"kQfvxBBHDvCa","executionInfo":{"status":"aborted","timestamp":1692341908706,"user_tz":-330,"elapsed":38,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which dimensionality reduction technique have you used and why? (If dimensionality reduction done on dataset.)"],"metadata":{"id":"T5CmagL3EC8N"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"ZKr75IDuEM7t"}},{"cell_type":"markdown","source":["### 8. Data Splitting"],"metadata":{"id":"BhH2vgX9EjGr"}},{"cell_type":"code","source":["# Split your data to train and test. Choose Splitting ratio wisely.\n","\n","# Separate the target variable 'Close' from the features\n","X = yesbank_copy.drop(columns=['Close'])  # Features\n","y = yesbank_copy['Close']  # Target variable\n","# Split the data into training and test sets with an 80-20 split ratio\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Verify the shapes of the train and test sets\n","print(\"X_train shape:\", X_train.shape)\n","print(\"X_test shape:\", X_test.shape)\n","print(\"y_train shape:\", y_train.shape)\n","print(\"y_test shape:\", y_test.shape)"],"metadata":{"id":"0CTyd2UwEyNM","executionInfo":{"status":"aborted","timestamp":1692341908706,"user_tz":-330,"elapsed":38,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### What data splitting ratio have you used and why?"],"metadata":{"id":"qjKvONjwE8ra"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"Y2lJ8cobFDb_"}},{"cell_type":"code","source":["#I used an 80-20 data splitting ratio\n","'''\n","Because an 80% training set provides a substantial amount of data for model trai\n","ning. Having a larger training set allows the model to learn from more samples,\n","potentially leading to better model generalization and performance.'''"],"metadata":{"id":"YR_Iv7zJh-he","executionInfo":{"status":"aborted","timestamp":1692341908707,"user_tz":-330,"elapsed":39,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 9. Handling Imbalanced Dataset"],"metadata":{"id":"P1XJ9OREExlT"}},{"cell_type":"markdown","source":["##### Do you think the dataset is imbalanced? Explain Why."],"metadata":{"id":"VFOzZv6IFROw"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"GeKDIv7pFgcC"}},{"cell_type":"code","source":["# Handling Imbalanced Dataset (If needed)"],"metadata":{"id":"nQsRhhZLFiDs","executionInfo":{"status":"aborted","timestamp":1692341908707,"user_tz":-330,"elapsed":39,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### What technique did you use to handle the imbalance dataset and why? (If needed to be balanced)"],"metadata":{"id":"TIqpNgepFxVj"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"qbet1HwdGDTz"}},{"cell_type":"markdown","source":["## ***7. ML Model Implementation***"],"metadata":{"id":"VfCC591jGiD4"}},{"cell_type":"markdown","source":["### ML Model - 1"],"metadata":{"id":"OB4l2ZhMeS1U"}},{"cell_type":"code","source":["# ML Model - 1 Implementation\n","\n","# Fit the Algorithm\n","\n","# Predict on the model\n","\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.metrics import mean_squared_error, r2_score\n","\n","# Separate the target variable 'Close' from the features\n","X = yesbank.drop(columns=['Close'])  # Features\n","y = yesbank['Close']  # Target variable\n","\n","# Split the data into training and test sets (80-20 split ratio)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Standardize the feature data\n","scaler = StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)\n","\n","# Create and train the Random Forest Regression model\n","model = RandomForestRegressor(n_estimators=100, random_state=42)\n","model.fit(X_train_scaled, y_train)\n","\n","# Make predictions on the test set\n","y_pred = model.predict(X_test_scaled)\n","\n","# Evaluate the model\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(\"Random Forest Regression Model Performance:\")\n","print(\"Mean Squared Error:\", mse)\n","print(\"R-squared:\", r2)\n","print(\"Prediction:\",y_pred)"],"metadata":{"id":"7ebyywQieS1U","executionInfo":{"status":"aborted","timestamp":1692341908707,"user_tz":-330,"elapsed":39,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 1. Explain the ML Model used and it's performance using Evaluation metric Score Chart."],"metadata":{"id":"ArJBuiUVfxKd"}},{"cell_type":"code","source":["#Forest Regression Model is used.\n","#Performance using Evaluation metric Score Chart-\n","'''\n","  We evaluated the performance of the Random Forest Regression model using two\n","  evaluation metrics: Mean Squared Error (MSE) and R-squared (R2).\n","\n","  1- Mean Squared Error (MSE): It measures the average squared difference between\n","  the actual target values and the predicted values. Lower MSE values indicate\n","  better model performance.\n","\n","  2- R-squared (R2): It represents the proportion of the variance in the target\n","  variable that is predictable from the feature variables. R2 ranges from 0 to\n","  1, where higher values indicate a better fit of the model to the data.'''\n","\n","# Visualizing evaluation Metric Score chart\n","plt.figure(figsize=(10, 6))\n","sns.scatterplot(x=y_test, y=y_pred)\n","sns.regplot(x=y_test, y=y_pred, scatter_kws={\"color\": \"blue\"}, line_kws={\"color\": \"red\"})\n","plt.xlabel(\"Actual Closing Price\")\n","plt.ylabel(\"Predicted Closing Price\")\n","plt.title(f\"Actual vs. Predicted Closing Price (MSE={mse:.2f}, R2={r2:.2f})\")\n","plt.grid(True)\n","plt.show()"],"metadata":{"id":"rqD5ZohzfxKe","executionInfo":{"status":"aborted","timestamp":1692341908708,"user_tz":-330,"elapsed":39,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2. Cross- Validation & Hyperparameter Tuning"],"metadata":{"id":"4qY1EAkEfxKe"}},{"cell_type":"code","source":["# ML Model - 1 Implementation with hyperparameter optimization techniques (i.e., GridSearch CV, RandomSearch CV, Bayesian Optimization etc.)\n","\n","# Fit the Algorithm\n","\n","# Predict on the model\n","\n","\n","\n","from sklearn.model_selection import train_test_split, GridSearchCV\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.ensemble import RandomForestRegressor\n","\n","# Separate the target variable 'Close' from the features\n","X = yesbank.drop(columns=['Close'])  # Features\n","y = yesbank['Close']  # Target variable\n","\n","# Split the data into training and test sets (80-20 split ratio)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Standardize the feature data\n","scaler = StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)\n","\n","# Create the Random Forest Regression model\n","model = RandomForestRegressor(random_state=42)\n","\n","# Define the hyperparameter grid for GridSearch CV\n","param_grid = {\n","    'n_estimators': [50, 100, 150],\n","    'max_depth': [None, 10, 20],\n","    'min_samples_split': [2, 5, 10],\n","    'min_samples_leaf': [1, 2, 4]\n","}\n","\n","# Perform GridSearch CV to find the best hyperparameters\n","grid_search = GridSearchCV(model, param_grid, cv=5, scoring='neg_mean_squared_error')\n","grid_search.fit(X_train_scaled, y_train)\n","\n","# Get the best hyperparameters and model\n","best_params = grid_search.best_params_\n","best_model = grid_search.best_estimator_\n","\n","# Make predictions on the test set using the best model\n","y_pred = best_model.predict(X_test_scaled)\n","\n","# Evaluate the model's performance\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(\"GridSearch CV Results:\")\n","print(\"Best Hyperparameters:\", best_params)\n","print(\"Mean Squared Error:\", mse)\n","print(\"R-squared:\", r2)\n","print(\"Prediction\", y_pred)"],"metadata":{"id":"Dy61ujd6fxKe","executionInfo":{"status":"aborted","timestamp":1692341908708,"user_tz":-330,"elapsed":39,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which hyperparameter optimization technique have you used and why?"],"metadata":{"id":"PiV4Ypx8fxKe"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"negyGRa7fxKf"}},{"cell_type":"code","source":["#GrisdSearch CV\n","'''\n","I chose GridSearch CV for hyperparameter tuning in the above code because the\n","dataset and hyperparameter search space are relatively small. The hyperparameter\n","grid I defined has a limited number of hyperparameter combinations, and\n","GridSearch CV can efficiently evaluate all combinations to find the best\n","hyperparameters.'''"],"metadata":{"id":"zRfO4aC9y-P6","executionInfo":{"status":"aborted","timestamp":1692341908708,"user_tz":-330,"elapsed":39,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart."],"metadata":{"id":"TfvqoZmBfxKf"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"OaLui8CcfxKf"}},{"cell_type":"code","source":["'''\n","Yes, The goal of hyperparameter tuning is to reduce the MSE and increase the R2\n","value, indicating improved predictive performance and a better fit of the model\n","to the data. If the MSE is lower and the R2 is higher after hyperparameter\n","tuning, it indicates that the model has become more accurate in predicting the\n","Yes Bank stock closing prices.\n","A\n","Here, R2 is a little increses after tuning.'''\n","\n"],"metadata":{"id":"iQfzjv6u0SMI","executionInfo":{"status":"aborted","timestamp":1692341908709,"user_tz":-330,"elapsed":40,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### ML Model - 2"],"metadata":{"id":"dJ2tPlVmpsJ0"}},{"cell_type":"code","source":["# ML Model - 1 Implementation\n","\n","# Fit the Algorithm\n","\n","# Predict on the model\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.ensemble import GradientBoostingRegressor\n","from sklearn.metrics import mean_squared_error, r2_score\n","\n","\n","# Separate the target variable 'Close' from the features\n","X = yesbank.drop(columns=['Close'])  # Features\n","y = yesbank['Close']  # Target variable\n","\n","# Split the data into training and test sets (80-20 split ratio)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Standardize the feature data\n","scaler = StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)\n","\n","# Create and train the Gradient Boosting Regression model\n","model = GradientBoostingRegressor(n_estimators=100, learning_rate=0.1, random_state=42)\n","model.fit(X_train_scaled, y_train)\n","\n","# Make predictions on the test set\n","y_pred = model.predict(X_test_scaled)\n","\n","# Evaluate the model\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(\"Gradient Boosting Regression Model Performance:\")\n","print(\"Mean Squared Error:\", mse)\n","print(\"R-squared:\", r2)\n","print(\"Prediction:\",y_pred)"],"metadata":{"id":"5kPNuCzH1KRH","executionInfo":{"status":"aborted","timestamp":1692341908709,"user_tz":-330,"elapsed":40,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 1. Explain the ML Model used and it's performance using Evaluation metric Score Chart."],"metadata":{"id":"JWYfwnehpsJ1"}},{"cell_type":"code","source":["#Gradient Boosting Regression Mode\n","#Performance using Evaluation metric Score Chart-\n","'''\n","   If the data points in the scatter plot align closely with the red diagonal\n","   line, it indicates that the model's predictions are accurate and match the\n","   actual values well. On the other hand, if the points are scattered far from\n","   the line, it suggests that the model is making less accurate predictions.\n","\n","   Here, data points in the scatter plot are align closely with the red diagonal\n","   line, it means the model's predictions are accurate.'''\n","\n","\n","\n","\n","# Visualizing evaluation Metric Score chart\n","\n","# Plot scatter plot of actual vs. predicted closing prices\n","plt.figure(figsize=(8, 6))\n","plt.scatter(y_test, y_pred, alpha=0.6)\n","plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', linestyle='--')\n","plt.xlabel('Actual Closing Price')\n","plt.ylabel('Predicted Closing Price')\n","plt.title('Actual vs. Predicted Closing Prices (Gradient Boosting Regression)')\n","plt.grid(True)\n","plt.show()\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"yEl-hgQWpsJ1","executionInfo":{"status":"aborted","timestamp":1692341908709,"user_tz":-330,"elapsed":40,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2. Cross- Validation & Hyperparameter Tuning"],"metadata":{"id":"-jK_YjpMpsJ2"}},{"cell_type":"code","source":["# ML Model - 1 Implementation with hyperparameter optimization techniques (i.e., GridSearch CV, RandomSearch CV, Bayesian Optimization etc.)\n","\n","# Fit the Algorithm\n","\n","# Predict on the model\n","\n","\n","from sklearn.model_selection import train_test_split, RandomizedSearchCV\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.ensemble import GradientBoostingRegressor\n","from sklearn.metrics import mean_squared_error, r2_score\n","\n","# Separate the target variable 'Close' from the features\n","X = yesbank.drop(columns=['Close'])  # Features\n","y = yesbank['Close']  # Target variable\n","\n","# Split the data into training and test sets (80-20 split ratio)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Standardize the feature data\n","scaler = StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)\n","\n","# Create the Gradient Boosting Regression model\n","gb_model = GradientBoostingRegressor(random_state=42)\n","\n","# Define the hyperparameter grid for RandomizedSearchCV\n","param_grid = {\n","    'n_estimators': [100, 150, 200],\n","    'learning_rate': [0.05, 0.1, 0.2],\n","    'max_depth': [3, 5, 7],\n","    'min_samples_split': [2, 5, 10],\n","    'min_samples_leaf': [1, 2, 4]\n","}\n","\n","# Perform RandomizedSearchCV to find the best hyperparameters\n","random_search = RandomizedSearchCV(estimator=gb_model, param_distributions=param_grid, n_iter=10,\n","                                   scoring='neg_mean_squared_error', cv=5, random_state=42)\n","random_search.fit(X_train_scaled, y_train)\n","\n","# Get the best hyperparameters and create the final Gradient Boosting Regression model\n","best_params = random_search.best_params_\n","final_model = GradientBoostingRegressor(**best_params, random_state=42)\n","\n","# Train the final model on the entire training set\n","final_model.fit(X_train_scaled, y_train)\n","\n","# Make predictions on the test set\n","y_pred = final_model.predict(X_test_scaled)\n","\n","# Evaluate the final model\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(\"Final Model Performance:\")\n","print(\"Best Hyperparameters:\", best_params)\n","print(\"Mean Squared Error:\", mse)\n","print(\"R-squared:\", r2)\n","print(\"Prediction:\",y_pred)"],"metadata":{"id":"Dn0EOfS6psJ2","executionInfo":{"status":"aborted","timestamp":1692341908710,"user_tz":-330,"elapsed":40,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which hyperparameter optimization technique have you used and why?"],"metadata":{"id":"HAih1iBOpsJ2"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"9kBgjYcdpsJ2"}},{"cell_type":"code","source":["#RandomizedSearchCV\n","'''\n","RandomizedSearchCV allows us to perform a randomized search over a range of\n","hyperparameter values, selecting the best combination of hyperparameters that\n","yields the best model performance.'''"],"metadata":{"id":"Nkv9x91D4noD","executionInfo":{"status":"aborted","timestamp":1692341908710,"user_tz":-330,"elapsed":40,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart."],"metadata":{"id":"zVGeBEFhpsJ2"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"74yRdG6UpsJ3"}},{"cell_type":"code","source":["'''\n","Yes, The goal of hyperparameter tuning is to reduce the MSE and increase the R2\n","value, indicating improved predictive performance and a better fit of the model\n","to the data. If the MSE is lower and the R2 is higher after hyperparameter\n","tuning, it indicates that the model has become more accurate in predicting the\n","Yes Bank stock closing prices.\n","A\n","Here, R2 is a little increses after tuning.'''"],"metadata":{"id":"wlKgckwB5M-A","executionInfo":{"status":"aborted","timestamp":1692341908711,"user_tz":-330,"elapsed":41,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 3. Explain each evaluation metric's indication towards business and the business impact pf the ML model used."],"metadata":{"id":"bmKjuQ-FpsJ3"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"BDKtOrBQpsJ3"}},{"cell_type":"code","source":["'''\n","1- Mean Squared Error (MSE):\n","   Indication towards Business: MSE measures the average squared difference\n","   between the actual target values and the predicted values. It quantifies the\n","   model's prediction accuracy, where lower MSE values indicate better\n","   performance.\n","   Business Impact: A low MSE implies that the model's predictions are closer to\n","   the actual values, which is crucial in financial applications like stock\n","   price prediction. Accurate predictions can help investors make informed\n","   decisions, reducing financial risks and maximizing potential gains.\n","   Additionally, low MSE indicates that the model's forecasts are reliable,\n","   increasing investor confidence in using the model's predictions.\n","\n","2- R-squared (R2) or Coefficient of Determination:\n","   Indication towards Business: R2 represents the proportion of the variance in\n","   the target variable that is predictable from the feature variables. A higher\n","   R2 value suggests that the model explains a larger portion of the target\n","   variable's variance.\n","   Business Impact: High R2 indicates that the model captures a significant\n","   portion of the target variable's variation, making it more reliable in\n","   understanding the underlying relationships between features and the closing\n","   price. It allows stakeholders to gain insights into the key factors driving\n","   the stock price and identify potential trends or patterns in the market.\n","   This understanding can lead to better decision-making, improved risk\n","   management, and more strategic investment strategies.\n","\n","3- Scatter Plot:\n","   Indication towards Business: These plots visually show the relationship\n","   between the actual and predicted values.\n","   Business Impact: A well-calibrated scatter plot indicate that the model's\n","   predictions are accurate and unbiased. This instills confidence in the\n","   model's reliability and encourages investors to use its predictions as\n","   guidance for making trading decisions. Trustworthy predictions can lead to\n","   increased investment in the stock and potentially positively impact the\n","   stock's price and overall market confidence.'''\n","\n","\n","\n","\n","\n"],"metadata":{"id":"QHC01Zf35coV","executionInfo":{"status":"aborted","timestamp":1692341908711,"user_tz":-330,"elapsed":41,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### ML Model - 3"],"metadata":{"id":"Fze-IPXLpx6K"}},{"cell_type":"code","source":["# ML Model - 3 Implementation\n","\n","# Fit the Algorithm\n","\n","# Predict on the model\n","\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.svm import SVR\n","from sklearn.metrics import mean_squared_error, r2_score\n","\n","# Separate the target variable 'Close' from the features\n","X = yesbank.drop(columns=['Close'])  # Features\n","y = yesbank['Close']  # Target variable\n","\n","# Split the data into training and test sets (80-20 split ratio)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Standardize the feature data\n","scaler = StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)\n","\n","# Create and train the Support Vector Regression model\n","model = SVR(kernel='rbf', C=1.0, epsilon=0.1)\n","model.fit(X_train_scaled, y_train)\n","\n","# Make predictions on the test set\n","y_pred = model.predict(X_test_scaled)\n","\n","# Evaluate the model\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(\"Support Vector Regression Model Performance:\")\n","print(\"Mean Squared Error:\", mse)\n","print(\"R-squared:\", r2)\n","print(\"Prediction:\",y_pred)\n","\n"],"metadata":{"id":"FFrSXAtrpx6M","executionInfo":{"status":"ok","timestamp":1692349608455,"user_tz":-330,"elapsed":479,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"85d1ebe7-4227-4d89-96b4-63b10f9059f8"},"execution_count":46,"outputs":[{"output_type":"stream","name":"stdout","text":["Support Vector Regression Model Performance:\n","Mean Squared Error: 0.013842689224707492\n","R-squared: 0.9851966641261864\n","Prediction: [-0.75958928 -0.85072989  2.49131641  0.19780079  2.22878613 -0.81420968\n"," -0.68663207 -0.48448926  0.61793339 -0.44813907 -0.52215317  0.89688858\n"," -0.40617346 -0.6972461  -0.8492506  -0.79276532 -0.62903724 -0.78057958\n"," -0.40926573 -0.56776473  0.94448975  0.49831388  2.46970863 -0.65080568\n"," -0.8282242   0.34174914 -0.4903519  -0.75072914 -0.51140572  0.41461035\n"," -0.50525681 -0.58830453  0.67151061  1.61219086 -0.50445558 -0.57366389\n"," -0.53464329]\n"]}]},{"cell_type":"markdown","source":["#### 1. Explain the ML Model used and it's performance using Evaluation metric Score Chart."],"metadata":{"id":"7AN1z2sKpx6M"}},{"cell_type":"code","source":["# Support Vector Regression Model\n","#Performance using Evaluation metric Score Chart-\n","'''\n","   If the data points in the scatter plot align closely with the red diagonal\n","   line, it indicates that the model's predictions are accurate and match the\n","   actual values well. On the other hand, if the points are scattered far from\n","   the line, it suggests that the model is making less accurate predictions.\n","\n","   Here, data points in the scatter plot are align closely with the red diagonal\n","   line, it means the model's predictions are accurate.'''\n","\n","\n","\n","\n","# Visualizing evaluation Metric Score chart\n","\n","# Plot the evaluation metric score chart (scatter plot)\n","plt.figure(figsize=(8, 6))\n","plt.scatter(y_test, y_pred, alpha=0.5)\n","plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], 'r--', label='Perfect Prediction')\n","plt.xlabel('Actual Closing Price')\n","plt.ylabel('Predicted Closing Price')\n","plt.title('Evaluation Metric Score Chart')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"id":"xIY4lxxGpx6M","executionInfo":{"status":"aborted","timestamp":1692341908712,"user_tz":-330,"elapsed":41,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### 2. Cross- Validation & Hyperparameter Tuning"],"metadata":{"id":"9PIHJqyupx6M"}},{"cell_type":"code","source":["pip install scikit-optimize"],"metadata":{"id":"0LL6Xz-h9hBR","executionInfo":{"status":"aborted","timestamp":1692341908712,"user_tz":-330,"elapsed":41,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# ML Model - 3 Implementation with hyperparameter optimization techniques (i.e., GridSearch CV, RandomSearch CV, Bayesian Optimization etc.)\n","\n","# Fit the Algorithm\n","\n","# Predict on the model\n","\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.metrics import mean_squared_error, r2_score\n","from skopt import BayesSearchCV\n","\n","# Separate the target variable 'Close' from the features\n","X = yesbank.drop(columns=['Close'])  # Features\n","y = yesbank['Close']  # Target variable\n","\n","# Split the data into training and test sets (80-20 split ratio)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Standardize the feature data\n","scaler = StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)\n","\n","# Create the Random Forest Regression model\n","model = RandomForestRegressor()\n","\n","# Define the hyperparameter search space\n","param_space = {\n","    'n_estimators': (50, 200),\n","    'max_depth': (5, 15),\n","    'min_samples_split': (2, 10),\n","    'min_samples_leaf': (1, 5),\n","    'bootstrap': [True, False],\n","}\n","\n","# Perform Bayesian Optimization for hyperparameter tuning\n","optimizer = BayesSearchCV(model, param_space, n_iter=50, cv=5, n_jobs=-1, random_state=42)\n","optimizer.fit(X_train_scaled, y_train)\n","\n","# Get the best hyperparameters\n","best_params = optimizer.best_params_\n","print(\"Best Hyperparameters:\", best_params)\n","\n","# Use the best hyperparameters to train the model\n","best_model = RandomForestRegressor(**best_params)\n","best_model.fit(X_train_scaled, y_train)\n","\n","# Make predictions on the test set using the best model\n","y_pred = best_model.predict(X_test_scaled)\n","\n","# Evaluate the model with the best hyperparameters\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(\"Best Model Performance:\")\n","print(\"Mean Squared Error:\", mse)\n","print(\"R-squared:\", r2)\n","print(\"Prediction:\",y_pred)"],"metadata":{"id":"eSVXuaSKpx6M","executionInfo":{"status":"aborted","timestamp":1692341908713,"user_tz":-330,"elapsed":42,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Which hyperparameter optimization technique have you used and why?"],"metadata":{"id":"_-qAgymDpx6N"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"lQMffxkwpx6N"}},{"cell_type":"code","source":["'''\n","I used the Bayesian Optimization technique for hyperparameter optimization.\n","Bayesian Optimization is a powerful and efficient method for optimizing the\n","hyperparameters of machine learning models.'''"],"metadata":{"id":"_-2YKbIf-qkr","executionInfo":{"status":"aborted","timestamp":1692341908713,"user_tz":-330,"elapsed":42,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### Have you seen any improvement? Note down the improvement with updates Evaluation metric Score Chart."],"metadata":{"id":"Z-hykwinpx6N"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"MzVzZC6opx6N"}},{"cell_type":"code","source":["'''\n","Yes, The goal of hyperparameter tuning is to reduce the MSE and increase the R2\n","value, indicating improved predictive performance and a better fit of the model\n","to the data. If the MSE is lower and the R2 is higher after hyperparameter\n","tuning, it indicates that the model has become more accurate in predicting the\n","Yes Bank stock closing prices.\n","A\n","Here, R2 is a little increses after tuning.'''"],"metadata":{"id":"D9mITd8C_miM","executionInfo":{"status":"aborted","timestamp":1692341908713,"user_tz":-330,"elapsed":42,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 1. Which Evaluation metrics did you consider for a positive business impact and why?"],"metadata":{"id":"h_CCil-SKHpo"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"jHVz9hHDKFms"}},{"cell_type":"code","source":["'''\n","\n","For evaluating the performance of the machine learning model for a positive\n","business impact in the context of stock price prediction, I typically consider\n","the following evaluation metrics-\n","\n","\n","Mean Squared Error (MSE): MSE measures the average squared difference between\n","the actual and predicted values. It quantifies the overall accuracy of the\n","model's predictions. A lower MSE indicates better performance, as it means the\n","model's predictions are closer to the actual values.\n","\n","R-squared (R2) Score: R2 score measures the proportion of variance in the\n","target variable that is explained by the model. It indicates how well the model\n","fits the data and how well it captures the patterns in the target variable. R2\n","score ranges from 0 to 1, where a higher value closer to 1 indicates a better\n","fit.\n","\n","Mean Absolute Error (MAE): MAE measures the average absolute difference between\n","the actual and predicted values. It provides a more interpretable measure of\n","prediction error, as it represents the average absolute deviation. Like MSE, a\n","lower MAE indicates better performance.\n","\n","Root Mean Squared Error (RMSE): RMSE is the square root of the MSE and is\n","commonly used to measure the model's prediction accuracy. It gives a more\n","interpretable estimate of the average prediction error in the original scale of\n","the target variable.\n","\n","Mean Percentage Error (MAPE): MAPE measures the percentage difference between\n","the actual and predicted values, providing a relative measure of prediction\n","accuracy. It is useful when the target variable has varying scales and is often\n","used in financial forecasting tasks.\n","\n","Directional Accuracy (DA): DA measures the proportion of correct predictions in\n","terms of the direction of the stock price movement (e.g., predicting an increase\n","when the price actually increases). It is essential for financial applications,\n","where correctly predicting the direction of movement can have significant\n","implications.'''"],"metadata":{"id":"brcGrNvIAHGz","executionInfo":{"status":"aborted","timestamp":1692341908713,"user_tz":-330,"elapsed":42,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2. Which ML model did you choose from the above created models as your final prediction model and why?"],"metadata":{"id":"cBFFvTBNJzUa"}},{"cell_type":"code","source":["'''\n","Support Vector Regression Model because in the context of predicting the Yes\n","Bank stock closing price, the importance of using Support Vector Regression\n","(SVR) lies in its ability to capture non-linear relationships and handle complex\n","patterns in the data. Here are some specific reasons why SVR can be valuable in\n","predicting the stock closing price of Yes Bank:\n","\n","1-Non-Linear Stock Price Trends\n","2-Handling Seasonal and Cyclical Patterns\n","3-Robustness to Outliers\n","4-Potential to Capture Market Sentiment'''"],"metadata":{"id":"FjZBxNp8BLXM","executionInfo":{"status":"aborted","timestamp":1692341908714,"user_tz":-330,"elapsed":43,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 3. Explain the model which you have used and the feature importance using any model explainability tool?"],"metadata":{"id":"HvGl1hHyA_VK"}},{"cell_type":"markdown","source":["Answer Here."],"metadata":{"id":"YnvVTiIxBL-C"}},{"cell_type":"code","source":["'''\n","Support Vector Regression is particularly useful when dealing with non-linear\n","and complex relationships between features and target variables. It is robust\n","to outliers and can handle high-dimensional data efficiently. SVR is widely used\n","in various regression tasks, including financial forecasting, stock price\n","prediction, and time series analysis.\n","\n","To explain the feature importance in Support Vector Regression (SVR), we can use\n","model explainability tools like SHAP (SHapley Additive exPlanations). SHAP\n","values provide a unified measure of feature importance for any machine learning\n","model, including SVR. They represent the contribution of each feature to the\n","prediction for a specific data point.\n","By using SHAP, you can gain a deeper understanding of how the SVR model is\n","making predictions and which features are most critical for its performance. T\n","his information can be invaluable for interpreting the model's behavior and\n","identifying key drivers that influence the Yes Bank stock closing price.'''"],"metadata":{"id":"Mbx7zcFxD7xc","executionInfo":{"status":"aborted","timestamp":1692341908714,"user_tz":-330,"elapsed":43,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## ***8.*** ***Future Work (Optional)***"],"metadata":{"id":"EyNgTHvd2WFk"}},{"cell_type":"markdown","source":["### 1. Save the best performing ml model in a pickle file or joblib file format for deployment process.\n"],"metadata":{"id":"KH5McJBi2d8v"}},{"cell_type":"code","source":["# Save the File\n","\n","from sklearn.svm import SVR\n","import pickle\n","import joblib\n","\n","# Assuming you have your Yes Bank stock closing price data and labels in X_train, y_train\n","\n","# Train the SVR model\n","svr_model = SVR(kernel='linear')\n","svr_model.fit(X_train, y_train)\n","\n","# Save the model to a pickle file\n","with open('svr_model.pickle', 'wb') as f:\n","    pickle.dump(svr_model, f)\n"],"metadata":{"id":"bQIANRl32f4J","executionInfo":{"status":"aborted","timestamp":1692341908715,"user_tz":-330,"elapsed":44,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 2. Again Load the saved model file and try to predict unseen data for a sanity check.\n"],"metadata":{"id":"iW_Lq9qf2h6X"}},{"cell_type":"code","source":["# Load the File and predict unseen data.\n","\n","import pickle\n","import joblib\n","unseen_data = np.array([[1234.56, 1230.00, 1250.00],\n","                        [1245.67, 1235.00, 1260.00],\n","                        [1250.00, 1230.00, 1265.00]])\n","\n","# Load the model from the pickle file\n","with open('svr_model.pickle', 'rb') as f:\n","    loaded_svr_model = pickle.load(f)\n","\n","# Assuming you have new unseen data in X_unseen, and you want to make predictions\n","predictions = loaded_svr_model.predict(unseen_data)\n","\n","# Print the predictions\n","print(predictions)"],"metadata":{"id":"oEXk9ydD2nVC","executionInfo":{"status":"aborted","timestamp":1692341908715,"user_tz":-330,"elapsed":44,"user":{"displayName":"Prakhar Mishra","userId":"17073905030492733766"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### ***Congrats! Your model is successfully created and ready for deployment on a live server for a real user interaction !!!***"],"metadata":{"id":"-Kee-DAl2viO"}},{"cell_type":"markdown","source":["# **Conclusion**"],"metadata":{"id":"gCX9965dhzqZ"}},{"cell_type":"markdown","source":["Write the conclusion here."],"metadata":{"id":"Fjb1IsQkh3yE"}},{"cell_type":"markdown","source":["### ***Hurrah! You have successfully completed your Machine Learning Capstone Project !!!***"],"metadata":{"id":"gIfDvo9L0UH2"}}]}